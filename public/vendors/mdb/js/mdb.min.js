var WOW;
jQuery.easing.jswing = jQuery.easing.swing, jQuery.extend(jQuery.easing, {
        def: "easeOutQuad",
        swing: function(t, e, i, n, o) {
            return jQuery.easing[jQuery.easing.def](t, e, i, n, o)
        },
        easeInQuad: function(t, e, i, n, o) {
            return n * (e /= o) * e + i
        },
        easeOutQuad: function(t, e, i, n, o) {
            return -n * (e /= o) * (e - 2) + i
        },
        easeInOutQuad: function(t, e, i, n, o) {
            return (e /= o / 2) < 1 ? n / 2 * e * e + i : -n / 2 * (--e * (e - 2) - 1) + i
        },
        easeInCubic: function(t, e, i, n, o) {
            return n * (e /= o) * e * e + i
        },
        easeOutCubic: function(t, e, i, n, o) {
            return n * ((e = e / o - 1) * e * e + 1) + i
        },
        easeInOutCubic: function(t, e, i, n, o) {
            return (e /= o / 2) < 1 ? n / 2 * e * e * e + i : n / 2 * ((e -= 2) * e * e + 2) + i
        },
        easeInQuart: function(t, e, i, n, o) {
            return n * (e /= o) * e * e * e + i
        },
        easeOutQuart: function(t, e, i, n, o) {
            return -n * ((e = e / o - 1) * e * e * e - 1) + i
        },
        easeInOutQuart: function(t, e, i, n, o) {
            return (e /= o / 2) < 1 ? n / 2 * e * e * e * e + i : -n / 2 * ((e -= 2) * e * e * e - 2) + i
        },
        easeInQuint: function(t, e, i, n, o) {
            return n * (e /= o) * e * e * e * e + i
        },
        easeOutQuint: function(t, e, i, n, o) {
            return n * ((e = e / o - 1) * e * e * e * e + 1) + i
        },
        easeInOutQuint: function(t, e, i, n, o) {
            return (e /= o / 2) < 1 ? n / 2 * e * e * e * e * e + i : n / 2 * ((e -= 2) * e * e * e * e + 2) + i
        },
        easeInSine: function(t, e, i, n, o) {
            return -n * Math.cos(e / o * (Math.PI / 2)) + n + i
        },
        easeOutSine: function(t, e, i, n, o) {
            return n * Math.sin(e / o * (Math.PI / 2)) + i
        },
        easeInOutSine: function(t, e, i, n, o) {
            return -n / 2 * (Math.cos(Math.PI * e / o) - 1) + i
        },
        easeInExpo: function(t, e, i, n, o) {
            return 0 == e ? i : n * Math.pow(2, 10 * (e / o - 1)) + i
        },
        easeOutExpo: function(t, e, i, n, o) {
            return e == o ? i + n : n * (1 - Math.pow(2, -10 * e / o)) + i
        },
        easeInOutExpo: function(t, e, i, n, o) {
            return 0 == e ? i : e == o ? i + n : (e /= o / 2) < 1 ? n / 2 * Math.pow(2, 10 * (e - 1)) + i : n / 2 * (2 - Math.pow(2, -10 * --e)) + i
        },
        easeInCirc: function(t, e, i, n, o) {
            return -n * (Math.sqrt(1 - (e /= o) * e) - 1) + i
        },
        easeOutCirc: function(t, e, i, n, o) {
            return n * Math.sqrt(1 - (e = e / o - 1) * e) + i
        },
        easeInOutCirc: function(t, e, i, n, o) {
            return (e /= o / 2) < 1 ? -n / 2 * (Math.sqrt(1 - e * e) - 1) + i : n / 2 * (Math.sqrt(1 - (e -= 2) * e) + 1) + i
        },
        easeInElastic: function(t, e, i, n, o) {
            var a = 1.70158,
                r = 0,
                s = n;
            if (0 == e) return i;
            if (1 == (e /= o)) return i + n;
            if (r || (r = .3 * o), s < Math.abs(n)) {
                s = n;
                a = r / 4
            } else a = r / (2 * Math.PI) * Math.asin(n / s);
            return -s * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * o - a) * (2 * Math.PI) / r) + i
        },
        easeOutElastic: function(t, e, i, n, o) {
            var a = 1.70158,
                r = 0,
                s = n;
            if (0 == e) return i;
            if (1 == (e /= o)) return i + n;
            if (r || (r = .3 * o), s < Math.abs(n)) {
                s = n;
                a = r / 4
            } else a = r / (2 * Math.PI) * Math.asin(n / s);
            return s * Math.pow(2, -10 * e) * Math.sin((e * o - a) * (2 * Math.PI) / r) + n + i
        },
        easeInOutElastic: function(t, e, i, n, o) {
            var a = 1.70158,
                r = 0,
                s = n;
            if (0 == e) return i;
            if (2 == (e /= o / 2)) return i + n;
            if (r || (r = o * (.3 * 1.5)), s < Math.abs(n)) {
                s = n;
                a = r / 4
            } else a = r / (2 * Math.PI) * Math.asin(n / s);
            return e < 1 ? s * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * o - a) * (2 * Math.PI) / r) * -.5 + i : s * Math.pow(2, -10 * (e -= 1)) * Math.sin((e * o - a) * (2 * Math.PI) / r) * .5 + n + i
        },
        easeInBack: function(t, e, i, n, o, a) {
            return void 0 == a && (a = 1.70158), n * (e /= o) * e * ((a + 1) * e - a) + i
        },
        easeOutBack: function(t, e, i, n, o, a) {
            return void 0 == a && (a = 1.70158), n * ((e = e / o - 1) * e * ((a + 1) * e + a) + 1) + i
        },
        easeInOutBack: function(t, e, i, n, o, a) {
            return void 0 == a && (a = 1.70158), (e /= o / 2) < 1 ? n / 2 * (e * e * ((1 + (a *= 1.525)) * e - a)) + i : n / 2 * ((e -= 2) * e * ((1 + (a *= 1.525)) * e + a) + 2) + i
        },
        easeInBounce: function(t, e, i, n, o) {
            return n - jQuery.easing.easeOutBounce(t, o - e, 0, n, o) + i
        },
        easeOutBounce: function(t, e, i, n, o) {
            return (e /= o) < 1 / 2.75 ? n * (7.5625 * e * e) + i : e < 2 / 2.75 ? n * (7.5625 * (e -= 1.5 / 2.75) * e + .75) + i : e < 2.5 / 2.75 ? n * (7.5625 * (e -= 2.25 / 2.75) * e + .9375) + i : n * (7.5625 * (e -= 2.625 / 2.75) * e + .984375) + i
        },
        easeInOutBounce: function(t, e, i, n, o) {
            return e < o / 2 ? .5 * jQuery.easing.easeInBounce(t, 2 * e, 0, n, o) + i : .5 * jQuery.easing.easeOutBounce(t, 2 * e - o, 0, n, o) + .5 * n + i
        }
    }), jQuery.Velocity ? console.log("Velocity is already loaded. You may be needlessly importing Velocity again; note that Materialize includes Velocity.") : (function(t) {
        function e(t) {
            var e = t.length,
                n = i.type(t);
            return "function" !== n && !i.isWindow(t) && (!(1 !== t.nodeType || !e) || ("array" === n || 0 === e || "number" == typeof e && e > 0 && e - 1 in t))
        }
        if (!t.jQuery) {
            var i = function(t, e) {
                return new i.fn.init(t, e)
            };
            i.isWindow = function(t) {
                return null != t && t == t.window
            }, i.type = function(t) {
                return null == t ? t + "" : "object" == typeof t || "function" == typeof t ? o[r.call(t)] || "object" : typeof t
            }, i.isArray = Array.isArray || function(t) {
                return "array" === i.type(t)
            }, i.isPlainObject = function(t) {
                var e;
                if (!t || "object" !== i.type(t) || t.nodeType || i.isWindow(t)) return !1;
                try {
                    if (t.constructor && !a.call(t, "constructor") && !a.call(t.constructor.prototype, "isPrototypeOf")) return !1
                } catch (t) {
                    return !1
                }
                for (e in t);
                return void 0 === e || a.call(t, e)
            }, i.each = function(t, i, n) {
                var o = 0,
                    a = t.length,
                    r = e(t);
                if (n) {
                    if (r)
                        for (; a > o && !1 !== i.apply(t[o], n); o++);
                    else
                        for (o in t)
                            if (!1 === i.apply(t[o], n)) break
                } else if (r)
                    for (; a > o && !1 !== i.call(t[o], o, t[o]); o++);
                else
                    for (o in t)
                        if (!1 === i.call(t[o], o, t[o])) break;
                return t
            }, i.data = function(t, e, o) {
                if (void 0 === o) {
                    var a = (r = t[i.expando]) && n[r];
                    if (void 0 === e) return a;
                    if (a && e in a) return a[e]
                } else if (void 0 !== e) {
                    var r = t[i.expando] || (t[i.expando] = ++i.uuid);
                    return n[r] = n[r] || {}, n[r][e] = o, o
                }
            }, i.removeData = function(t, e) {
                var o = t[i.expando],
                    a = o && n[o];
                a && i.each(e, function(t, e) {
                    delete a[e]
                })
            }, i.extend = function() {
                var t, e, n, o, a, r, s = arguments[0] || {},
                    l = 1,
                    c = arguments.length,
                    u = !1;
                for ("boolean" == typeof s && (u = s, s = arguments[l] || {}, l++), "object" != typeof s && "function" !== i.type(s) && (s = {}), l === c && (s = this, l--); c > l; l++)
                    if (null != (a = arguments[l]))
                        for (o in a) t = s[o], s !== (n = a[o]) && (u && n && (i.isPlainObject(n) || (e = i.isArray(n))) ? (e ? (e = !1, r = t && i.isArray(t) ? t : []) : r = t && i.isPlainObject(t) ? t : {}, s[o] = i.extend(u, r, n)) : void 0 !== n && (s[o] = n));
                return s
            }, i.queue = function(t, n, o) {
                if (t) {
                    n = (n || "fx") + "queue";
                    var a = i.data(t, n);
                    return o ? (!a || i.isArray(o) ? a = i.data(t, n, function(t, i) {
                        var n = i || [];
                        return null != t && (e(Object(t)) ? function(t, e) {
                            for (var i = +e.length, n = 0, o = t.length; i > n;) t[o++] = e[n++];
                            if (i != i)
                                for (; void 0 !== e[n];) t[o++] = e[n++];
                            t.length = o
                        }(n, "string" == typeof t ? [t] : t) : [].push.call(n, t)), n
                    }(o)) : a.push(o), a) : a || []
                }
            }, i.dequeue = function(t, e) {
                i.each(t.nodeType ? [t] : t, function(t, n) {
                    e = e || "fx";
                    var o = i.queue(n, e),
                        a = o.shift();
                    "inprogress" === a && (a = o.shift()), a && ("fx" === e && o.unshift("inprogress"), a.call(n, function() {
                        i.dequeue(n, e)
                    }))
                })
            }, i.fn = i.prototype = {
                init: function(t) {
                    if (t.nodeType) return this[0] = t, this;
                    throw new Error("Not a DOM node.")
                },
                offset: function() {
                    var e = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : {
                        top: 0,
                        left: 0
                    };
                    return {
                        top: e.top + (t.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),
                        left: e.left + (t.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)
                    }
                },
                position: function() {
                    function t() {
                        for (var t = this.offsetParent || document; t && "html" === !t.nodeType.toLowerCase && "static" === t.style.position;) t = t.offsetParent;
                        return t || document
                    }
                    var e = this[0],
                        t = t.apply(e),
                        n = this.offset(),
                        o = /^(?:body|html)$/i.test(t.nodeName) ? {
                            top: 0,
                            left: 0
                        } : i(t).offset();
                    return n.top -= parseFloat(e.style.marginTop) || 0, n.left -= parseFloat(e.style.marginLeft) || 0, t.style && (o.top += parseFloat(t.style.borderTopWidth) || 0, o.left += parseFloat(t.style.borderLeftWidth) || 0), {
                        top: n.top - o.top,
                        left: n.left - o.left
                    }
                }
            };
            var n = {};
            i.expando = "velocity" + (new Date).getTime(), i.uuid = 0;
            for (var o = {}, a = o.hasOwnProperty, r = o.toString, s = "Boolean Number String Function Array Date RegExp Object Error".split(" "), l = 0; l < s.length; l++) o["[object " + s[l] + "]"] = s[l].toLowerCase();
            i.fn.init.prototype = i.fn, t.Velocity = {
                Utilities: i
            }
        }
    }(window), function(t) {
        "object" == typeof module && "object" == typeof module.exports ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : t()
    }(function() {
        return function(t, e, i, n) {
            function o(t) {
                return p.isWrapped(t) ? t = [].slice.call(t) : p.isNode(t) && (t = [t]), t
            }

            function a(t) {
                var e = u.data(t, "velocity");
                return null === e ? n : e
            }

            function r(t, i, n, o) {
                function a(t, e) {
                    return 1 - 3 * e + 3 * t
                }

                function r(t, e) {
                    return 3 * e - 6 * t
                }

                function s(t) {
                    return 3 * t
                }

                function l(t, e, i) {
                    return ((a(e, i) * t + r(e, i)) * t + s(e)) * t
                }

                function c(t, e, i) {
                    return 3 * a(e, i) * t * t + 2 * r(e, i) * t + s(e)
                }

                function u(e, i) {
                    for (var o = 0; p > o; ++o) {
                        var a = c(i, t, n);
                        if (0 === a) return i;
                        i -= (l(i, t, n) - e) / a
                    }
                    return i
                }

                function d(e, i, o) {
                    var a, r, s = 0;
                    do {
                        (a = l(r = i + (o - i) / 2, t, n) - e) > 0 ? o = r : i = r
                    } while (Math.abs(a) > m && ++s < g);
                    return r
                }

                function h() {
                    k = !0, (t != i || n != o) && function() {
                        for (var e = 0; v > e; ++e) w[e] = l(e * y, t, n)
                    }()
                }
                var p = 4,
                    f = .001,
                    m = 1e-7,
                    g = 10,
                    v = 11,
                    y = 1 / (v - 1),
                    b = "Float32Array" in e;
                if (4 !== arguments.length) return !1;
                for (var x = 0; 4 > x; ++x)
                    if ("number" != typeof arguments[x] || isNaN(arguments[x]) || !isFinite(arguments[x])) return !1;
                t = Math.min(t, 1), n = Math.min(n, 1), t = Math.max(t, 0), n = Math.max(n, 0);
                var w = b ? new Float32Array(v) : new Array(v),
                    k = !1,
                    C = function(e) {
                        return k || h(), t === i && n === o ? e : 0 === e ? 0 : 1 === e ? 1 : l(function(e) {
                            for (var i = 0, o = 1, a = v - 1; o != a && w[o] <= e; ++o) i += y;
                            var r = i + (e - w[--o]) / (w[o + 1] - w[o]) * y,
                                s = c(r, t, n);
                            return s >= f ? u(e, r) : 0 == s ? r : d(e, i, i + y)
                        }(e), i, o)
                    };
                C.getControlPoints = function() {
                    return [{
                        x: t,
                        y: i
                    }, {
                        x: n,
                        y: o
                    }]
                };
                var S = "generateBezier(" + [t, i, n, o] + ")";
                return C.toString = function() {
                    return S
                }, C
            }

            function s(t, e) {
                var i = t;
                return p.isString(t) ? v.Easings[t] || (i = !1) : i = p.isArray(t) && 1 === t.length ? function(t) {
                    return function(e) {
                        return Math.round(e * t) * (1 / t)
                    }
                }.apply(null, t) : p.isArray(t) && 2 === t.length ? y.apply(null, t.concat([e])) : !(!p.isArray(t) || 4 !== t.length) && r.apply(null, t), !1 === i && (i = v.Easings[v.defaults.easing] ? v.defaults.easing : g), i
            }

            function l(t) {
                if (t) {
                    var e = (new Date).getTime(),
                        i = v.State.calls.length;
                    i > 1e4 && (v.State.calls = function(t) {
                        for (var e = -1, i = t ? t.length : 0, n = []; ++e < i;) {
                            var o = t[e];
                            o && n.push(o)
                        }
                        return n
                    }(v.State.calls));
                    for (var o = 0; i > o; o++)
                        if (v.State.calls[o]) {
                            var r = v.State.calls[o],
                                s = r[0],
                                d = r[2],
                                h = r[3],
                                f = !!h,
                                m = null;
                            h || (h = v.State.calls[o][3] = e - 16);
                            for (var g = Math.min((e - h) / d.duration, 1), y = 0, x = s.length; x > y; y++) {
                                var k = s[y],
                                    C = k.element;
                                if (a(C)) {
                                    var S = !1;
                                    if (d.display !== n && null !== d.display && "none" !== d.display) {
                                        if ("flex" === d.display) {
                                            u.each(["-webkit-box", "-moz-box", "-ms-flexbox", "-webkit-flex"], function(t, e) {
                                                b.setPropertyValue(C, "display", e)
                                            })
                                        }
                                        b.setPropertyValue(C, "display", d.display)
                                    }
                                    for (var M in d.visibility !== n && "hidden" !== d.visibility && b.setPropertyValue(C, "visibility", d.visibility), k)
                                        if ("element" !== M) {
                                            var T, I = k[M],
                                                P = p.isString(I.easing) ? v.Easings[I.easing] : I.easing;
                                            if (1 === g) T = I.endValue;
                                            else {
                                                var A = I.endValue - I.startValue;
                                                if (T = I.startValue + A * P(g, d, A), !f && T === I.currentValue) continue
                                            }
                                            if (I.currentValue = T, "tween" === M) m = T;
                                            else {
                                                if (b.Hooks.registered[M]) {
                                                    var O = b.Hooks.getRoot(M),
                                                        _ = a(C).rootPropertyValueCache[O];
                                                    _ && (I.rootPropertyValue = _)
                                                }
                                                var D = b.setPropertyValue(C, M, I.currentValue + (0 === parseFloat(T) ? "" : I.unitType), I.rootPropertyValue, I.scrollData);
                                                b.Hooks.registered[M] && (a(C).rootPropertyValueCache[O] = b.Normalizations.registered[O] ? b.Normalizations.registered[O]("extract", null, D[1]) : D[1]), "transform" === D[0] && (S = !0)
                                            }
                                        } d.mobileHA && a(C).transformCache.translate3d === n && (a(C).transformCache.translate3d = "(0px, 0px, 0px)", S = !0), S && b.flushTransformCache(C)
                                }
                            }
                            d.display !== n && "none" !== d.display && (v.State.calls[o][2].display = !1), d.visibility !== n && "hidden" !== d.visibility && (v.State.calls[o][2].visibility = !1), d.progress && d.progress.call(r[1], r[1], g, Math.max(0, h + d.duration - e), h, m), 1 === g && c(o)
                        }
                }
                v.State.isTicking && w(l)
            }

            function c(t, e) {
                if (!v.State.calls[t]) return !1;
                for (var i = v.State.calls[t][0], o = v.State.calls[t][1], r = v.State.calls[t][2], s = v.State.calls[t][4], l = !1, c = 0, d = i.length; d > c; c++) {
                    var h = i[c].element;
                    if (e || r.loop || ("none" === r.display && b.setPropertyValue(h, "display", r.display), "hidden" === r.visibility && b.setPropertyValue(h, "visibility", r.visibility)), !0 !== r.loop && (u.queue(h)[1] === n || !/\.velocityQueueEntryFlag/i.test(u.queue(h)[1])) && a(h)) {
                        a(h).isAnimating = !1, a(h).rootPropertyValueCache = {};
                        var p = !1;
                        u.each(b.Lists.transforms3D, function(t, e) {
                            var i = /^scale/.test(e) ? 1 : 0,
                                o = a(h).transformCache[e];
                            a(h).transformCache[e] !== n && new RegExp("^\\(" + i + "[^.]").test(o) && (p = !0, delete a(h).transformCache[e])
                        }), r.mobileHA && (p = !0, delete a(h).transformCache.translate3d), p && b.flushTransformCache(h), b.Values.removeClass(h, "velocity-animating")
                    }
                    if (!e && r.complete && !r.loop && c === d - 1) try {
                        r.complete.call(o, o)
                    } catch (t) {
                        setTimeout(function() {
                            throw t
                        }, 1)
                    }
                    s && !0 !== r.loop && s(o), a(h) && !0 === r.loop && !e && (u.each(a(h).tweensContainer, function(t, e) {
                        /^rotate/.test(t) && 360 === parseFloat(e.endValue) && (e.endValue = 0, e.startValue = 360), /^backgroundPosition/.test(t) && 100 === parseFloat(e.endValue) && "%" === e.unitType && (e.endValue = 0, e.startValue = 100)
                    }), v(h, "reverse", {
                        loop: !0,
                        delay: r.delay
                    })), !1 !== r.queue && u.dequeue(h, r.queue)
                }
                v.State.calls[t] = !1;
                for (var f = 0, m = v.State.calls.length; m > f; f++)
                    if (!1 !== v.State.calls[f]) {
                        l = !0;
                        break
                    }! 1 === l && (v.State.isTicking = !1, delete v.State.calls, v.State.calls = [])
            }
            var u, d = function() {
                    if (i.documentMode) return i.documentMode;
                    for (var t = 7; t > 4; t--) {
                        var e = i.createElement("div");
                        if (e.innerHTML = "\x3c!--[if IE " + t + "]><span></span><![endif]--\x3e", e.getElementsByTagName("span").length) return e = null, t
                    }
                    return n
                }(),
                h = function() {
                    var t = 0;
                    return e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || function(e) {
                        var i, n = (new Date).getTime();
                        return i = Math.max(0, 16 - (n - t)), t = n + i, setTimeout(function() {
                            e(n + i)
                        }, i)
                    }
                }(),
                p = {
                    isString: function(t) {
                        return "string" == typeof t
                    },
                    isArray: Array.isArray || function(t) {
                        return "[object Array]" === Object.prototype.toString.call(t)
                    },
                    isFunction: function(t) {
                        return "[object Function]" === Object.prototype.toString.call(t)
                    },
                    isNode: function(t) {
                        return t && t.nodeType
                    },
                    isNodeList: function(t) {
                        return "object" == typeof t && /^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(t)) && t.length !== n && (0 === t.length || "object" == typeof t[0] && t[0].nodeType > 0)
                    },
                    isWrapped: function(t) {
                        return t && (t.jquery || e.Zepto && e.Zepto.zepto.isZ(t))
                    },
                    isSVG: function(t) {
                        return e.SVGElement && t instanceof e.SVGElement
                    },
                    isEmptyObject: function(t) {
                        for (var e in t) return !1;
                        return !0
                    }
                },
                f = !1;
            if (t.fn && t.fn.jquery ? (u = t, f = !0) : u = e.Velocity.Utilities, 8 >= d && !f) throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.");
            if (!(7 >= d)) {
                var m = 400,
                    g = "swing",
                    v = {
                        State: {
                            isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
                            isAndroid: /Android/i.test(navigator.userAgent),
                            isGingerbread: /Android 2\.3\.[3-7]/i.test(navigator.userAgent),
                            isChrome: e.chrome,
                            isFirefox: /Firefox/i.test(navigator.userAgent),
                            prefixElement: i.createElement("div"),
                            prefixMatches: {},
                            scrollAnchor: null,
                            scrollPropertyLeft: null,
                            scrollPropertyTop: null,
                            isTicking: !1,
                            calls: []
                        },
                        CSS: {},
                        Utilities: u,
                        Redirects: {},
                        Easings: {},
                        Promise: e.Promise,
                        defaults: {
                            queue: "",
                            duration: m,
                            easing: g,
                            begin: n,
                            complete: n,
                            progress: n,
                            display: n,
                            visibility: n,
                            loop: !1,
                            delay: !1,
                            mobileHA: !0,
                            _cacheValues: !0
                        },
                        init: function(t) {
                            u.data(t, "velocity", {
                                isSVG: p.isSVG(t),
                                isAnimating: !1,
                                computedStyle: null,
                                tweensContainer: null,
                                rootPropertyValueCache: {},
                                transformCache: {}
                            })
                        },
                        hook: null,
                        mock: !1,
                        version: {
                            major: 1,
                            minor: 2,
                            patch: 2
                        },
                        debug: !1
                    };
                e.pageYOffset !== n ? (v.State.scrollAnchor = e, v.State.scrollPropertyLeft = "pageXOffset", v.State.scrollPropertyTop = "pageYOffset") : (v.State.scrollAnchor = i.documentElement || i.body.parentNode || i.body, v.State.scrollPropertyLeft = "scrollLeft", v.State.scrollPropertyTop = "scrollTop");
                var y = function() {
                    function t(t) {
                        return -t.tension * t.x - t.friction * t.v
                    }

                    function e(e, i, n) {
                        var o = {
                            x: e.x + n.dx * i,
                            v: e.v + n.dv * i,
                            tension: e.tension,
                            friction: e.friction
                        };
                        return {
                            dx: o.v,
                            dv: t(o)
                        }
                    }

                    function i(i, n) {
                        var o = {
                                dx: i.v,
                                dv: t(i)
                            },
                            a = e(i, .5 * n, o),
                            r = e(i, .5 * n, a),
                            s = e(i, n, r),
                            l = 1 / 6 * (o.dx + 2 * (a.dx + r.dx) + s.dx),
                            c = 1 / 6 * (o.dv + 2 * (a.dv + r.dv) + s.dv);
                        return i.x = i.x + l * n, i.v = i.v + c * n, i
                    }
                    return function t(e, n, o) {
                        var a, r, s, l = {
                                x: -1,
                                v: 0,
                                tension: null,
                                friction: null
                            },
                            c = [0],
                            u = 0;
                        for (e = parseFloat(e) || 500, n = parseFloat(n) || 20, o = o || null, l.tension = e, l.friction = n, (a = null !== o) ? r = (u = t(e, n)) / o * .016 : r = .016; s = i(s || l, r), c.push(1 + s.x), u += 16, Math.abs(s.x) > 1e-4 && Math.abs(s.v) > 1e-4;);
                        return a ? function(t) {
                            return c[t * (c.length - 1) | 0]
                        } : u
                    }
                }();
                v.Easings = {
                    linear: function(t) {
                        return t
                    },
                    swing: function(t) {
                        return .5 - Math.cos(t * Math.PI) / 2
                    },
                    spring: function(t) {
                        return 1 - Math.cos(4.5 * t * Math.PI) * Math.exp(6 * -t)
                    }
                }, u.each([
                    ["ease", [.25, .1, .25, 1]],
                    ["ease-in", [.42, 0, 1, 1]],
                    ["ease-out", [0, 0, .58, 1]],
                    ["ease-in-out", [.42, 0, .58, 1]],
                    ["easeInSine", [.47, 0, .745, .715]],
                    ["easeOutSine", [.39, .575, .565, 1]],
                    ["easeInOutSine", [.445, .05, .55, .95]],
                    ["easeInQuad", [.55, .085, .68, .53]],
                    ["easeOutQuad", [.25, .46, .45, .94]],
                    ["easeInOutQuad", [.455, .03, .515, .955]],
                    ["easeInCubic", [.55, .055, .675, .19]],
                    ["easeOutCubic", [.215, .61, .355, 1]],
                    ["easeInOutCubic", [.645, .045, .355, 1]],
                    ["easeInQuart", [.895, .03, .685, .22]],
                    ["easeOutQuart", [.165, .84, .44, 1]],
                    ["easeInOutQuart", [.77, 0, .175, 1]],
                    ["easeInQuint", [.755, .05, .855, .06]],
                    ["easeOutQuint", [.23, 1, .32, 1]],
                    ["easeInOutQuint", [.86, 0, .07, 1]],
                    ["easeInExpo", [.95, .05, .795, .035]],
                    ["easeOutExpo", [.19, 1, .22, 1]],
                    ["easeInOutExpo", [1, 0, 0, 1]],
                    ["easeInCirc", [.6, .04, .98, .335]],
                    ["easeOutCirc", [.075, .82, .165, 1]],
                    ["easeInOutCirc", [.785, .135, .15, .86]]
                ], function(t, e) {
                    v.Easings[e[0]] = r.apply(null, e[1])
                });
                var b = v.CSS = {
                    RegEx: {
                        isHex: /^#([A-f\d]{3}){1,2}$/i,
                        valueUnwrap: /^[A-z]+\((.*)\)$/i,
                        wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,
                        valueSplit: /([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/gi
                    },
                    Lists: {
                        colors: ["fill", "stroke", "stopColor", "color", "backgroundColor", "borderColor", "borderTopColor", "borderRightColor", "borderBottomColor", "borderLeftColor", "outlineColor"],
                        transformsBase: ["translateX", "translateY", "scale", "scaleX", "scaleY", "skewX", "skewY", "rotateZ"],
                        transforms3D: ["transformPerspective", "translateZ", "scaleZ", "rotateX", "rotateY"]
                    },
                    Hooks: {
                        templates: {
                            textShadow: ["Color X Y Blur", "black 0px 0px 0px"],
                            boxShadow: ["Color X Y Blur Spread", "black 0px 0px 0px 0px"],
                            clip: ["Top Right Bottom Left", "0px 0px 0px 0px"],
                            backgroundPosition: ["X Y", "0% 0%"],
                            transformOrigin: ["X Y Z", "50% 50% 0px"],
                            perspectiveOrigin: ["X Y", "50% 50%"]
                        },
                        registered: {},
                        register: function() {
                            for (var t = 0; t < b.Lists.colors.length; t++) {
                                var e = "color" === b.Lists.colors[t] ? "0 0 0 1" : "255 255 255 1";
                                b.Hooks.templates[b.Lists.colors[t]] = ["Red Green Blue Alpha", e]
                            }
                            var i, n, o;
                            if (d)
                                for (i in b.Hooks.templates) {
                                    o = (n = b.Hooks.templates[i])[0].split(" ");
                                    var a = n[1].match(b.RegEx.valueSplit);
                                    "Color" === o[0] && (o.push(o.shift()), a.push(a.shift()), b.Hooks.templates[i] = [o.join(" "), a.join(" ")])
                                }
                            for (i in b.Hooks.templates)
                                for (var t in o = (n = b.Hooks.templates[i])[0].split(" ")) {
                                    var r = i + o[t],
                                        s = t;
                                    b.Hooks.registered[r] = [i, s]
                                }
                        },
                        getRoot: function(t) {
                            var e = b.Hooks.registered[t];
                            return e ? e[0] : t
                        },
                        cleanRootPropertyValue: function(t, e) {
                            return b.RegEx.valueUnwrap.test(e) && (e = e.match(b.RegEx.valueUnwrap)[1]), b.Values.isCSSNullValue(e) && (e = b.Hooks.templates[t][1]), e
                        },
                        extractValue: function(t, e) {
                            var i = b.Hooks.registered[t];
                            if (i) {
                                var n = i[0],
                                    o = i[1];
                                return (e = b.Hooks.cleanRootPropertyValue(n, e)).toString().match(b.RegEx.valueSplit)[o]
                            }
                            return e
                        },
                        injectValue: function(t, e, i) {
                            var n = b.Hooks.registered[t];
                            if (n) {
                                var o, a = n[0],
                                    r = n[1];
                                return (o = (i = b.Hooks.cleanRootPropertyValue(a, i)).toString().match(b.RegEx.valueSplit))[r] = e, o.join(" ")
                            }
                            return i
                        }
                    },
                    Normalizations: {
                        registered: {
                            clip: function(t, e, i) {
                                switch (t) {
                                    case "name":
                                        return "clip";
                                    case "extract":
                                        var n;
                                        return b.RegEx.wrappedValueAlreadyExtracted.test(i) ? n = i : n = (n = i.toString().match(b.RegEx.valueUnwrap)) ? n[1].replace(/,(\s+)?/g, " ") : i, n;
                                    case "inject":
                                        return "rect(" + i + ")"
                                }
                            },
                            blur: function(t, e, i) {
                                switch (t) {
                                    case "name":
                                        return v.State.isFirefox ? "filter" : "-webkit-filter";
                                    case "extract":
                                        var n = parseFloat(i);
                                        if (!n && 0 !== n) {
                                            var o = i.toString().match(/blur\(([0-9]+[A-z]+)\)/i);
                                            n = o ? o[1] : 0
                                        }
                                        return n;
                                    case "inject":
                                        return parseFloat(i) ? "blur(" + i + ")" : "none"
                                }
                            },
                            opacity: function(t, e, i) {
                                if (8 >= d) switch (t) {
                                    case "name":
                                        return "filter";
                                    case "extract":
                                        var n = i.toString().match(/alpha\(opacity=(.*)\)/i);
                                        return n ? n[1] / 100 : 1;
                                    case "inject":
                                        return e.style.zoom = 1, parseFloat(i) >= 1 ? "" : "alpha(opacity=" + parseInt(100 * parseFloat(i), 10) + ")"
                                } else switch (t) {
                                    case "name":
                                        return "opacity";
                                    case "extract":
                                    case "inject":
                                        return i
                                }
                            }
                        },
                        register: function() {
                            9 >= d || v.State.isGingerbread || (b.Lists.transformsBase = b.Lists.transformsBase.concat(b.Lists.transforms3D));
                            for (var t = 0; t < b.Lists.transformsBase.length; t++) ! function() {
                                var e = b.Lists.transformsBase[t];
                                b.Normalizations.registered[e] = function(t, i, o) {
                                    switch (t) {
                                        case "name":
                                            return "transform";
                                        case "extract":
                                            return a(i) === n || a(i).transformCache[e] === n ? /^scale/i.test(e) ? 1 : 0 : a(i).transformCache[e].replace(/[()]/g, "");
                                        case "inject":
                                            var r = !1;
                                            switch (e.substr(0, e.length - 1)) {
                                                case "translate":
                                                    r = !/(%|px|em|rem|vw|vh|\d)$/i.test(o);
                                                    break;
                                                case "scal":
                                                case "scale":
                                                    v.State.isAndroid && a(i).transformCache[e] === n && 1 > o && (o = 1), r = !/(\d)$/i.test(o);
                                                    break;
                                                case "skew":
                                                    r = !/(deg|\d)$/i.test(o);
                                                    break;
                                                case "rotate":
                                                    r = !/(deg|\d)$/i.test(o)
                                            }
                                            return r || (a(i).transformCache[e] = "(" + o + ")"), a(i).transformCache[e]
                                    }
                                }
                            }();
                            for (t = 0; t < b.Lists.colors.length; t++) ! function() {
                                var e = b.Lists.colors[t];
                                b.Normalizations.registered[e] = function(t, i, o) {
                                    switch (t) {
                                        case "name":
                                            return e;
                                        case "extract":
                                            var a;
                                            if (b.RegEx.wrappedValueAlreadyExtracted.test(o)) a = o;
                                            else {
                                                var r, s = {
                                                    black: "rgb(0, 0, 0)",
                                                    blue: "rgb(0, 0, 255)",
                                                    gray: "rgb(128, 128, 128)",
                                                    green: "rgb(0, 128, 0)",
                                                    red: "rgb(255, 0, 0)",
                                                    white: "rgb(255, 255, 255)"
                                                };
                                                /^[A-z]+$/i.test(o) ? r = s[o] !== n ? s[o] : s.black : b.RegEx.isHex.test(o) ? r = "rgb(" + b.Values.hexToRgb(o).join(" ") + ")" : /^rgba?\(/i.test(o) || (r = s.black), a = (r || o).toString().match(b.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g, " ")
                                            }
                                            return 8 >= d || 3 !== a.split(" ").length || (a += " 1"), a;
                                        case "inject":
                                            return 8 >= d ? 4 === o.split(" ").length && (o = o.split(/\s+/).slice(0, 3).join(" ")) : 3 === o.split(" ").length && (o += " 1"), (8 >= d ? "rgb" : "rgba") + "(" + o.replace(/\s+/g, ",").replace(/\.(\d)+(?=,)/g, "") + ")"
                                    }
                                }
                            }()
                        }
                    },
                    Names: {
                        camelCase: function(t) {
                            return t.replace(/-(\w)/g, function(t, e) {
                                return e.toUpperCase()
                            })
                        },
                        SVGAttribute: function(t) {
                            var e = "width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";
                            return (d || v.State.isAndroid && !v.State.isChrome) && (e += "|transform"), new RegExp("^(" + e + ")$", "i").test(t)
                        },
                        prefixCheck: function(t) {
                            if (v.State.prefixMatches[t]) return [v.State.prefixMatches[t], !0];
                            for (var e = ["", "Webkit", "Moz", "ms", "O"], i = 0, n = e.length; n > i; i++) {
                                var o;
                                if (o = 0 === i ? t : e[i] + t.replace(/^\w/, function(t) {
                                        return t.toUpperCase()
                                    }), p.isString(v.State.prefixElement.style[o])) return v.State.prefixMatches[t] = o, [o, !0]
                            }
                            return [t, !1]
                        }
                    },
                    Values: {
                        hexToRgb: function(t) {
                            var e;
                            return t = t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, function(t, e, i, n) {
                                return e + e + i + i + n + n
                            }), (e = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t)) ? [parseInt(e[1], 16), parseInt(e[2], 16), parseInt(e[3], 16)] : [0, 0, 0]
                        },
                        isCSSNullValue: function(t) {
                            return 0 == t || /^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(t)
                        },
                        getUnitType: function(t) {
                            return /^(rotate|skew)/i.test(t) ? "deg" : /(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(t) ? "" : "px"
                        },
                        getDisplayType: function(t) {
                            var e = t && t.tagName.toString().toLowerCase();
                            return /^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(e) ? "inline" : /^(li)$/i.test(e) ? "list-item" : /^(tr)$/i.test(e) ? "table-row" : /^(table)$/i.test(e) ? "table" : /^(tbody)$/i.test(e) ? "table-row-group" : "block"
                        },
                        addClass: function(t, e) {
                            t.classList ? t.classList.add(e) : t.className += (t.className.length ? " " : "") + e
                        },
                        removeClass: function(t, e) {
                            t.classList ? t.classList.remove(e) : t.className = t.className.toString().replace(new RegExp("(^|\\s)" + e.split(" ").join("|") + "(\\s|$)", "gi"), " ")
                        }
                    },
                    getPropertyValue: function(t, i, o, r) {
                        function s(t, i) {
                            function o() {
                                h && b.setPropertyValue(t, "display", "none")
                            }
                            var l = 0;
                            if (8 >= d) l = u.css(t, i);
                            else {
                                var c, h = !1;
                                if (/^(width|height)$/.test(i) && 0 === b.getPropertyValue(t, "display") && (h = !0, b.setPropertyValue(t, "display", b.Values.getDisplayType(t))), !r) {
                                    if ("height" === i && "border-box" !== b.getPropertyValue(t, "boxSizing").toString().toLowerCase()) {
                                        var p = t.offsetHeight - (parseFloat(b.getPropertyValue(t, "borderTopWidth")) || 0) - (parseFloat(b.getPropertyValue(t, "borderBottomWidth")) || 0) - (parseFloat(b.getPropertyValue(t, "paddingTop")) || 0) - (parseFloat(b.getPropertyValue(t, "paddingBottom")) || 0);
                                        return o(), p
                                    }
                                    if ("width" === i && "border-box" !== b.getPropertyValue(t, "boxSizing").toString().toLowerCase()) {
                                        var f = t.offsetWidth - (parseFloat(b.getPropertyValue(t, "borderLeftWidth")) || 0) - (parseFloat(b.getPropertyValue(t, "borderRightWidth")) || 0) - (parseFloat(b.getPropertyValue(t, "paddingLeft")) || 0) - (parseFloat(b.getPropertyValue(t, "paddingRight")) || 0);
                                        return o(), f
                                    }
                                }
                                c = a(t) === n ? e.getComputedStyle(t, null) : a(t).computedStyle ? a(t).computedStyle : a(t).computedStyle = e.getComputedStyle(t, null), "borderColor" === i && (i = "borderTopColor"), ("" === (l = 9 === d && "filter" === i ? c.getPropertyValue(i) : c[i]) || null === l) && (l = t.style[i]), o()
                            }
                            if ("auto" === l && /^(top|right|bottom|left)$/i.test(i)) {
                                var m = s(t, "position");
                                ("fixed" === m || "absolute" === m && /top|left/i.test(i)) && (l = u(t).position()[i] + "px")
                            }
                            return l
                        }
                        var l;
                        if (b.Hooks.registered[i]) {
                            var c = i,
                                h = b.Hooks.getRoot(c);
                            o === n && (o = b.getPropertyValue(t, b.Names.prefixCheck(h)[0])), b.Normalizations.registered[h] && (o = b.Normalizations.registered[h]("extract", t, o)), l = b.Hooks.extractValue(c, o)
                        } else if (b.Normalizations.registered[i]) {
                            var p, f;
                            "transform" !== (p = b.Normalizations.registered[i]("name", t)) && (f = s(t, b.Names.prefixCheck(p)[0]), b.Values.isCSSNullValue(f) && b.Hooks.templates[i] && (f = b.Hooks.templates[i][1])), l = b.Normalizations.registered[i]("extract", t, f)
                        }
                        if (!/^[\d-]/.test(l))
                            if (a(t) && a(t).isSVG && b.Names.SVGAttribute(i))
                                if (/^(height|width)$/i.test(i)) try {
                                    l = t.getBBox()[i]
                                } catch (t) {
                                    l = 0
                                } else l = t.getAttribute(i);
                                else l = s(t, b.Names.prefixCheck(i)[0]);
                        return b.Values.isCSSNullValue(l) && (l = 0), v.debug >= 2 && console.log("Get " + i + ": " + l), l
                    },
                    setPropertyValue: function(t, i, n, o, r) {
                        var s = i;
                        if ("scroll" === i) r.container ? r.container["scroll" + r.direction] = n : "Left" === r.direction ? e.scrollTo(n, r.alternateValue) : e.scrollTo(r.alternateValue, n);
                        else if (b.Normalizations.registered[i] && "transform" === b.Normalizations.registered[i]("name", t)) b.Normalizations.registered[i]("inject", t, n), s = "transform", n = a(t).transformCache[i];
                        else {
                            if (b.Hooks.registered[i]) {
                                var l = i,
                                    c = b.Hooks.getRoot(i);
                                o = o || b.getPropertyValue(t, c), n = b.Hooks.injectValue(l, n, o), i = c
                            }
                            if (b.Normalizations.registered[i] && (n = b.Normalizations.registered[i]("inject", t, n), i = b.Normalizations.registered[i]("name", t)), s = b.Names.prefixCheck(i)[0], 8 >= d) try {
                                t.style[s] = n
                            } catch (t) {
                                v.debug && console.log("Browser does not support [" + n + "] for [" + s + "]")
                            } else a(t) && a(t).isSVG && b.Names.SVGAttribute(i) ? t.setAttribute(i, n) : t.style[s] = n;
                            v.debug >= 2 && console.log("Set " + i + " (" + s + "): " + n)
                        }
                        return [s, n]
                    },
                    flushTransformCache: function(t) {
                        function e(e) {
                            return parseFloat(b.getPropertyValue(t, e))
                        }
                        var i = "";
                        if ((d || v.State.isAndroid && !v.State.isChrome) && a(t).isSVG) {
                            var n = {
                                translate: [e("translateX"), e("translateY")],
                                skewX: [e("skewX")],
                                skewY: [e("skewY")],
                                scale: 1 !== e("scale") ? [e("scale"), e("scale")] : [e("scaleX"), e("scaleY")],
                                rotate: [e("rotateZ"), 0, 0]
                            };
                            u.each(a(t).transformCache, function(t) {
                                /^translate/i.test(t) ? t = "translate" : /^scale/i.test(t) ? t = "scale" : /^rotate/i.test(t) && (t = "rotate"), n[t] && (i += t + "(" + n[t].join(" ") + ") ", delete n[t])
                            })
                        } else {
                            var o, r;
                            u.each(a(t).transformCache, function(e) {
                                return o = a(t).transformCache[e], "transformPerspective" === e ? (r = o, !0) : (9 === d && "rotateZ" === e && (e = "rotate"), void(i += e + o + " "))
                            }), r && (i = "perspective" + r + " " + i)
                        }
                        b.setPropertyValue(t, "transform", i)
                    }
                };
                b.Hooks.register(), b.Normalizations.register(), v.hook = function(t, e, i) {
                    var r = n;
                    return t = o(t), u.each(t, function(t, o) {
                        if (a(o) === n && v.init(o), i === n) r === n && (r = v.CSS.getPropertyValue(o, e));
                        else {
                            var s = v.CSS.setPropertyValue(o, e, i);
                            "transform" === s[0] && v.CSS.flushTransformCache(o), r = s
                        }
                    }), r
                };
                var x = function() {
                    function t() {
                        return d ? I.promise || null : h
                    }

                    function r() {
                        function t(t) {
                            function h(t, e) {
                                var i = n,
                                    o = n,
                                    a = n;
                                return p.isArray(t) ? (i = t[0], !p.isArray(t[1]) && /^[\d-]/.test(t[1]) || p.isFunction(t[1]) || b.RegEx.isHex.test(t[1]) ? a = t[1] : (p.isString(t[1]) && !b.RegEx.isHex.test(t[1]) || p.isArray(t[1])) && (o = e ? t[1] : s(t[1], c.duration), t[2] !== n && (a = t[2]))) : i = t, e || (o = o || c.easing), p.isFunction(i) && (i = i.call(r, S, C)), p.isFunction(a) && (a = a.call(r, S, C)), [i || 0, o, a]
                            }

                            function f(t, e) {
                                var i, n;
                                return n = (e || "0").toString().toLowerCase().replace(/[%A-z]+$/, function(t) {
                                    return i = t, ""
                                }), i || (i = b.Values.getUnitType(t)), [n, i]
                            }

                            function m() {
                                var t = {
                                        myParent: r.parentNode || i.body,
                                        position: b.getPropertyValue(r, "position"),
                                        fontSize: b.getPropertyValue(r, "fontSize")
                                    },
                                    n = t.position === L.lastPosition && t.myParent === L.lastParent,
                                    o = t.fontSize === L.lastFontSize;
                                L.lastParent = t.myParent, L.lastPosition = t.position, L.lastFontSize = t.fontSize;
                                var s = 100,
                                    l = {};
                                if (o && n) l.emToPx = L.lastEmToPx, l.percentToPxWidth = L.lastPercentToPxWidth, l.percentToPxHeight = L.lastPercentToPxHeight;
                                else {
                                    var c = a(r).isSVG ? i.createElementNS("http://www.w3.org/2000/svg", "rect") : i.createElement("div");
                                    v.init(c), t.myParent.appendChild(c), u.each(["overflow", "overflowX", "overflowY"], function(t, e) {
                                        v.CSS.setPropertyValue(c, e, "hidden")
                                    }), v.CSS.setPropertyValue(c, "position", t.position), v.CSS.setPropertyValue(c, "fontSize", t.fontSize), v.CSS.setPropertyValue(c, "boxSizing", "content-box"), u.each(["minWidth", "maxWidth", "width", "minHeight", "maxHeight", "height"], function(t, e) {
                                        v.CSS.setPropertyValue(c, e, s + "%")
                                    }), v.CSS.setPropertyValue(c, "paddingLeft", s + "em"), l.percentToPxWidth = L.lastPercentToPxWidth = (parseFloat(b.getPropertyValue(c, "width", null, !0)) || 1) / s, l.percentToPxHeight = L.lastPercentToPxHeight = (parseFloat(b.getPropertyValue(c, "height", null, !0)) || 1) / s, l.emToPx = L.lastEmToPx = (parseFloat(b.getPropertyValue(c, "paddingLeft")) || 1) / s, t.myParent.removeChild(c)
                                }
                                return null === L.remToPx && (L.remToPx = parseFloat(b.getPropertyValue(i.body, "fontSize")) || 16), null === L.vwToPx && (L.vwToPx = parseFloat(e.innerWidth) / 100, L.vhToPx = parseFloat(e.innerHeight) / 100), l.remToPx = L.remToPx, l.vwToPx = L.vwToPx, l.vhToPx = L.vhToPx, v.debug >= 1 && console.log("Unit ratios: " + JSON.stringify(l), r), l
                            }
                            if (c.begin && 0 === S) try {
                                c.begin.call(g, g)
                            } catch (t) {
                                setTimeout(function() {
                                    throw t
                                }, 1)
                            }
                            if ("scroll" === T) {
                                var x, k, M, P = /^x$/i.test(c.axis) ? "Left" : "Top",
                                    A = parseFloat(c.offset) || 0;
                                c.container ? p.isWrapped(c.container) || p.isNode(c.container) ? (c.container = c.container[0] || c.container, M = (x = c.container["scroll" + P]) + u(r).position()[P.toLowerCase()] + A) : c.container = null : (x = v.State.scrollAnchor[v.State["scrollProperty" + P]], k = v.State.scrollAnchor[v.State["scrollProperty" + ("Left" === P ? "Top" : "Left")]], M = u(r).offset()[P.toLowerCase()] + A), d = {
                                    scroll: {
                                        rootPropertyValue: !1,
                                        startValue: x,
                                        currentValue: x,
                                        endValue: M,
                                        unitType: "",
                                        easing: c.easing,
                                        scrollData: {
                                            container: c.container,
                                            direction: P,
                                            alternateValue: k
                                        }
                                    },
                                    element: r
                                }, v.debug && console.log("tweensContainer (scroll): ", d.scroll, r)
                            } else if ("reverse" === T) {
                                if (!a(r).tweensContainer) return void u.dequeue(r, c.queue);
                                "none" === a(r).opts.display && (a(r).opts.display = "auto"), "hidden" === a(r).opts.visibility && (a(r).opts.visibility = "visible"), a(r).opts.loop = !1, a(r).opts.begin = null, a(r).opts.complete = null, w.easing || delete c.easing, w.duration || delete c.duration, c = u.extend({}, a(r).opts, c);
                                var O = u.extend(!0, {}, a(r).tweensContainer);
                                for (var _ in O)
                                    if ("element" !== _) {
                                        var D = O[_].startValue;
                                        O[_].startValue = O[_].currentValue = O[_].endValue, O[_].endValue = D, p.isEmptyObject(w) || (O[_].easing = c.easing), v.debug && console.log("reverse tweensContainer (" + _ + "): " + JSON.stringify(O[_]), r)
                                    } d = O
                            } else if ("start" === T) {
                                for (var E in a(r).tweensContainer && !0 === a(r).isAnimating && (O = a(r).tweensContainer), u.each(y, function(t, e) {
                                        if (RegExp("^" + b.Lists.colors.join("$|^") + "$").test(t)) {
                                            var i = h(e, !0),
                                                o = i[0],
                                                a = i[1],
                                                r = i[2];
                                            if (b.RegEx.isHex.test(o)) {
                                                for (var s = ["Red", "Green", "Blue"], l = b.Values.hexToRgb(o), c = r ? b.Values.hexToRgb(r) : n, u = 0; u < s.length; u++) {
                                                    var d = [l[u]];
                                                    a && d.push(a), c !== n && d.push(c[u]), y[t + s[u]] = d
                                                }
                                                delete y[t]
                                            }
                                        }
                                    }), y) {
                                    var F = h(y[E]),
                                        R = F[0],
                                        W = F[1],
                                        V = F[2];
                                    E = b.Names.camelCase(E);
                                    var N = b.Hooks.getRoot(E),
                                        z = !1;
                                    if (a(r).isSVG || "tween" === N || !1 !== b.Names.prefixCheck(N)[1] || b.Normalizations.registered[N] !== n) {
                                        (c.display !== n && null !== c.display && "none" !== c.display || c.visibility !== n && "hidden" !== c.visibility) && /opacity|filter/.test(E) && !V && 0 !== R && (V = 0), c._cacheValues && O && O[E] ? (V === n && (V = O[E].endValue + O[E].unitType), z = a(r).rootPropertyValueCache[N]) : b.Hooks.registered[E] ? V === n ? (z = b.getPropertyValue(r, N), V = b.getPropertyValue(r, E, z)) : z = b.Hooks.templates[N][1] : V === n && (V = b.getPropertyValue(r, E));
                                        var H, j, B, Y = !1;
                                        if (V = (H = f(E, V))[0], B = H[1], R = (H = f(E, R))[0].replace(/^([+-\/*])=/, function(t, e) {
                                                return Y = e, ""
                                            }), j = H[1], V = parseFloat(V) || 0, R = parseFloat(R) || 0, "%" === j && (/^(fontSize|lineHeight)$/.test(E) ? (R /= 100, j = "em") : /^scale/.test(E) ? (R /= 100, j = "") : /(Red|Green|Blue)$/i.test(E) && (R = R / 100 * 255, j = "")), /[\/*]/.test(Y)) j = B;
                                        else if (B !== j && 0 !== V)
                                            if (0 === R) j = B;
                                            else {
                                                o = o || m();
                                                var q = /margin|padding|left|right|width|text|word|letter/i.test(E) || /X$/.test(E) || "x" === E ? "x" : "y";
                                                switch (B) {
                                                    case "%":
                                                        V *= "x" === q ? o.percentToPxWidth : o.percentToPxHeight;
                                                        break;
                                                    case "px":
                                                        break;
                                                    default:
                                                        V *= o[B + "ToPx"]
                                                }
                                                switch (j) {
                                                    case "%":
                                                        V *= 1 / ("x" === q ? o.percentToPxWidth : o.percentToPxHeight);
                                                        break;
                                                    case "px":
                                                        break;
                                                    default:
                                                        V *= 1 / o[j + "ToPx"]
                                                }
                                            } switch (Y) {
                                            case "+":
                                                R = V + R;
                                                break;
                                            case "-":
                                                R = V - R;
                                                break;
                                            case "*":
                                                R *= V;
                                                break;
                                            case "/":
                                                R = V / R
                                        }
                                        d[E] = {
                                            rootPropertyValue: z,
                                            startValue: V,
                                            currentValue: V,
                                            endValue: R,
                                            unitType: j,
                                            easing: W
                                        }, v.debug && console.log("tweensContainer (" + E + "): " + JSON.stringify(d[E]), r)
                                    } else v.debug && console.log("Skipping [" + N + "] due to a lack of browser support.")
                                }
                                d.element = r
                            }
                            d.element && (b.Values.addClass(r, "velocity-animating"), $.push(d), "" === c.queue && (a(r).tweensContainer = d, a(r).opts = c), a(r).isAnimating = !0, S === C - 1 ? (v.State.calls.push([$, g, c, null, I.resolver]), !1 === v.State.isTicking && (v.State.isTicking = !0, l())) : S++)
                        }
                        var o, r = this,
                            c = u.extend({}, v.defaults, w),
                            d = {};
                        switch (a(r) === n && v.init(r), parseFloat(c.delay) && !1 !== c.queue && u.queue(r, c.queue, function(t) {
                            v.velocityQueueEntryFlag = !0, a(r).delayTimer = {
                                setTimeout: setTimeout(t, parseFloat(c.delay)),
                                next: t
                            }
                        }), c.duration.toString().toLowerCase()) {
                            case "fast":
                                c.duration = 200;
                                break;
                            case "normal":
                                c.duration = m;
                                break;
                            case "slow":
                                c.duration = 600;
                                break;
                            default:
                                c.duration = parseFloat(c.duration) || 1
                        }!1 !== v.mock && (!0 === v.mock ? c.duration = c.delay = 1 : (c.duration *= parseFloat(v.mock) || 1, c.delay *= parseFloat(v.mock) || 1)), c.easing = s(c.easing, c.duration), c.begin && !p.isFunction(c.begin) && (c.begin = null), c.progress && !p.isFunction(c.progress) && (c.progress = null), c.complete && !p.isFunction(c.complete) && (c.complete = null), c.display !== n && null !== c.display && (c.display = c.display.toString().toLowerCase(), "auto" === c.display && (c.display = v.CSS.Values.getDisplayType(r))), c.visibility !== n && null !== c.visibility && (c.visibility = c.visibility.toString().toLowerCase()), c.mobileHA = c.mobileHA && v.State.isMobile && !v.State.isGingerbread, !1 === c.queue ? c.delay ? setTimeout(t, c.delay) : t() : u.queue(r, c.queue, function(e, i) {
                            return !0 === i ? (I.promise && I.resolver(g), !0) : (v.velocityQueueEntryFlag = !0, void t())
                        }), "" !== c.queue && "fx" !== c.queue || "inprogress" === u.queue(r)[0] || u.dequeue(r)
                    }
                    var d, h, f, g, y, w, k = arguments[0] && (arguments[0].p || u.isPlainObject(arguments[0].properties) && !arguments[0].properties.names || p.isString(arguments[0].properties));
                    if (p.isWrapped(this) ? (d = !1, f = 0, g = this, h = this) : (d = !0, f = 1, g = k ? arguments[0].elements || arguments[0].e : arguments[0]), g = o(g)) {
                        k ? (y = arguments[0].properties || arguments[0].p, w = arguments[0].options || arguments[0].o) : (y = arguments[f], w = arguments[f + 1]);
                        var C = g.length,
                            S = 0;
                        if (!/^(stop|finish)$/i.test(y) && !u.isPlainObject(w)) {
                            w = {};
                            for (var M = f + 1; M < arguments.length; M++) p.isArray(arguments[M]) || !/^(fast|normal|slow)$/i.test(arguments[M]) && !/^\d/.test(arguments[M]) ? p.isString(arguments[M]) || p.isArray(arguments[M]) ? w.easing = arguments[M] : p.isFunction(arguments[M]) && (w.complete = arguments[M]) : w.duration = arguments[M]
                        }
                        var T, I = {
                            promise: null,
                            resolver: null,
                            rejecter: null
                        };
                        switch (d && v.Promise && (I.promise = new v.Promise(function(t, e) {
                            I.resolver = t, I.rejecter = e
                        })), y) {
                            case "scroll":
                                T = "scroll";
                                break;
                            case "reverse":
                                T = "reverse";
                                break;
                            case "finish":
                            case "stop":
                                u.each(g, function(t, e) {
                                    a(e) && a(e).delayTimer && (clearTimeout(a(e).delayTimer.setTimeout), a(e).delayTimer.next && a(e).delayTimer.next(), delete a(e).delayTimer)
                                });
                                var P = [];
                                return u.each(v.State.calls, function(t, e) {
                                    e && u.each(e[1], function(i, o) {
                                        var r = w === n ? "" : w;
                                        return !0 !== r && e[2].queue !== r && (w !== n || !1 !== e[2].queue) || void u.each(g, function(i, n) {
                                            n === o && ((!0 === w || p.isString(w)) && (u.each(u.queue(n, p.isString(w) ? w : ""), function(t, e) {
                                                p.isFunction(e) && e(null, !0)
                                            }), u.queue(n, p.isString(w) ? w : "", [])), "stop" === y ? (a(n) && a(n).tweensContainer && !1 !== r && u.each(a(n).tweensContainer, function(t, e) {
                                                e.endValue = e.currentValue
                                            }), P.push(t)) : "finish" === y && (e[2].duration = 1))
                                        })
                                    })
                                }), "stop" === y && (u.each(P, function(t, e) {
                                    c(e, !0)
                                }), I.promise && I.resolver(g)), t();
                            default:
                                if (!u.isPlainObject(y) || p.isEmptyObject(y)) {
                                    if (p.isString(y) && v.Redirects[y]) {
                                        var A = (E = u.extend({}, w)).duration,
                                            O = E.delay || 0;
                                        return !0 === E.backwards && (g = u.extend(!0, [], g).reverse()), u.each(g, function(t, e) {
                                            parseFloat(E.stagger) ? E.delay = O + parseFloat(E.stagger) * t : p.isFunction(E.stagger) && (E.delay = O + E.stagger.call(e, t, C)), E.drag && (E.duration = parseFloat(A) || (/^(callout|transition)/.test(y) ? 1e3 : m), E.duration = Math.max(E.duration * (E.backwards ? 1 - t / C : (t + 1) / C), .75 * E.duration, 200)), v.Redirects[y].call(e, e, E || {}, t, C, g, I.promise ? I : n)
                                        }), t()
                                    }
                                    var _ = "Velocity: First argument (" + y + ") was not a property map, a known action, or a registered redirect. Aborting.";
                                    return I.promise ? I.rejecter(new Error(_)) : console.log(_), t()
                                }
                                T = "start"
                        }
                        var D, E, L = {
                                lastParent: null,
                                lastPosition: null,
                                lastFontSize: null,
                                lastPercentToPxWidth: null,
                                lastPercentToPxHeight: null,
                                lastEmToPx: null,
                                remToPx: null,
                                vwToPx: null,
                                vhToPx: null
                            },
                            $ = [];
                        if (u.each(g, function(t, e) {
                                p.isNode(e) && r.call(e)
                            }), (E = u.extend({}, v.defaults, w)).loop = parseInt(E.loop), D = 2 * E.loop - 1, E.loop)
                            for (var F = 0; D > F; F++) {
                                var R = {
                                    delay: E.delay,
                                    progress: E.progress
                                };
                                F === D - 1 && (R.display = E.display, R.visibility = E.visibility, R.complete = E.complete), x(g, "reverse", R)
                            }
                        return t()
                    }
                };
                (v = u.extend(x, v)).animate = x;
                var w = e.requestAnimationFrame || h;
                return v.State.isMobile || i.hidden === n || i.addEventListener("visibilitychange", function() {
                    i.hidden ? (w = function(t) {
                        return setTimeout(function() {
                            t(!0)
                        }, 16)
                    }, l()) : w = e.requestAnimationFrame || h
                }), t.Velocity = v, t !== e && (t.fn.velocity = x, t.fn.velocity.defaults = v.defaults), u.each(["Down", "Up"], function(t, e) {
                    v.Redirects["slide" + e] = function(t, i, o, a, r, s) {
                        var l = u.extend({}, i),
                            c = l.begin,
                            d = l.complete,
                            h = {
                                height: "",
                                marginTop: "",
                                marginBottom: "",
                                paddingTop: "",
                                paddingBottom: ""
                            },
                            p = {};
                        l.display === n && (l.display = "Down" === e ? "inline" === v.CSS.Values.getDisplayType(t) ? "inline-block" : "block" : "none"), l.begin = function() {
                            for (var i in c && c.call(r, r), h) {
                                p[i] = t.style[i];
                                var n = v.CSS.getPropertyValue(t, i);
                                h[i] = "Down" === e ? [n, 0] : [0, n]
                            }
                            p.overflow = t.style.overflow, t.style.overflow = "hidden"
                        }, l.complete = function() {
                            for (var e in p) t.style[e] = p[e];
                            d && d.call(r, r), s && s.resolver(r)
                        }, v(t, h, l)
                    }
                }), u.each(["In", "Out"], function(t, e) {
                    v.Redirects["fade" + e] = function(t, i, o, a, r, s) {
                        var l = u.extend({}, i),
                            c = {
                                opacity: "In" === e ? 1 : 0
                            },
                            d = l.complete;
                        l.complete = o !== a - 1 ? l.begin = null : function() {
                            d && d.call(r, r), s && s.resolver(r)
                        }, l.display === n && (l.display = "In" === e ? "auto" : "none"), v(this, c, l)
                    }
                }), v
            }
            jQuery.fn.velocity = jQuery.fn.animate
        }(window.jQuery || window.Zepto || window, window, document)
    })),
    function(t) {
        if ("object" == typeof exports && "undefined" != typeof module) module.exports = t();
        else if ("function" == typeof define && define.amd) define([], t);
        else {
            ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).Chart = t()
        }
    }(function() {
            return function() {
                    return function t(e, i, n) {
                        function o(r, s) {
                            if (!i[r]) {
                                if (!e[r]) {
                                    var l = "function" == typeof require && require;
                                    if (!s && l) return l(r, !0);
                                    if (a) return a(r, !0);
                                    var c = new Error("Cannot find module '" + r + "'");
                                    throw c.code = "MODULE_NOT_FOUND", c
                                }
                                var u = i[r] = {
                                    exports: {}
                                };
                                e[r][0].call(u.exports, function(t) {
                                    return o(e[r][1][t] || t)
                                }, u, u.exports, t, e, i, n)
                            }
                            return i[r].exports
                        }
                        for (var a = "function" == typeof require && require, r = 0; r < n.length; r++) o(n[r]);
                        return o
                    }
                }()({
                        1: [function(t, e, i) {}, {}],
                        2: [function(t, e, i) {
                            var n = t(6);

                            function o(t) {
                                if (t) {
                                    var e = [0, 0, 0],
                                        i = 1,
                                        o = t.match(/^#([a-fA-F0-9]{3})$/i);
                                    if (o) {
                                        o = o[1];
                                        for (var a = 0; a < e.length; a++) e[a] = parseInt(o[a] + o[a], 16)
                                    } else if (o = t.match(/^#([a-fA-F0-9]{6})$/i)) {
                                        o = o[1];
                                        for (a = 0; a < e.length; a++) e[a] = parseInt(o.slice(2 * a, 2 * a + 2), 16)
                                    } else if (o = t.match(/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i)) {
                                        for (a = 0; a < e.length; a++) e[a] = parseInt(o[a + 1]);
                                        i = parseFloat(o[4])
                                    } else if (o = t.match(/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i)) {
                                        for (a = 0; a < e.length; a++) e[a] = Math.round(2.55 * parseFloat(o[a + 1]));
                                        i = parseFloat(o[4])
                                    } else if (o = t.match(/(\w+)/)) {
                                        if ("transparent" == o[1]) return [0, 0, 0, 0];
                                        if (!(e = n[o[1]])) return
                                    }
                                    for (a = 0; a < e.length; a++) e[a] = u(e[a], 0, 255);
                                    return i = i || 0 == i ? u(i, 0, 1) : 1, e[3] = i, e
                                }
                            }

                            function a(t) {
                                if (t) {
                                    var e = t.match(/^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/);
                                    if (e) {
                                        var i = parseFloat(e[4]);
                                        return [u(parseInt(e[1]), 0, 360), u(parseFloat(e[2]), 0, 100), u(parseFloat(e[3]), 0, 100), u(isNaN(i) ? 1 : i, 0, 1)]
                                    }
                                }
                            }

                            function r(t) {
                                if (t) {
                                    var e = t.match(/^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/);
                                    if (e) {
                                        var i = parseFloat(e[4]);
                                        return [u(parseInt(e[1]), 0, 360), u(parseFloat(e[2]), 0, 100), u(parseFloat(e[3]), 0, 100), u(isNaN(i) ? 1 : i, 0, 1)]
                                    }
                                }
                            }

                            function s(t, e) {
                                return void 0 === e && (e = void 0 !== t[3] ? t[3] : 1), "rgba(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + e + ")"
                            }

                            function l(t, e) {
                                return "rgba(" + Math.round(t[0] / 255 * 100) + "%, " + Math.round(t[1] / 255 * 100) + "%, " + Math.round(t[2] / 255 * 100) + "%, " + (e || t[3] || 1) + ")"
                            }

                            function c(t, e) {
                                return void 0 === e && (e = void 0 !== t[3] ? t[3] : 1), "hsla(" + t[0] + ", " + t[1] + "%, " + t[2] + "%, " + e + ")"
                            }

                            function u(t, e, i) {
                                return Math.min(Math.max(e, t), i)
                            }

                            function d(t) {
                                var e = t.toString(16).toUpperCase();
                                return e.length < 2 ? "0" + e : e
                            }
                            e.exports = {
                                getRgba: o,
                                getHsla: a,
                                getRgb: function(t) {
                                    var e = o(t);
                                    return e && e.slice(0, 3)
                                },
                                getHsl: function(t) {
                                    var e = a(t);
                                    return e && e.slice(0, 3)
                                },
                                getHwb: r,
                                getAlpha: function(t) {
                                    var e = o(t);
                                    if (e) return e[3];
                                    if (e = a(t)) return e[3];
                                    if (e = r(t)) return e[3]
                                },
                                hexString: function(t) {
                                    return "#" + d(t[0]) + d(t[1]) + d(t[2])
                                },
                                rgbString: function(t, e) {
                                    if (e < 1 || t[3] && t[3] < 1) return s(t, e);
                                    return "rgb(" + t[0] + ", " + t[1] + ", " + t[2] + ")"
                                },
                                rgbaString: s,
                                percentString: function(t, e) {
                                    if (e < 1 || t[3] && t[3] < 1) return l(t, e);
                                    var i = Math.round(t[0] / 255 * 100),
                                        n = Math.round(t[1] / 255 * 100),
                                        o = Math.round(t[2] / 255 * 100);
                                    return "rgb(" + i + "%, " + n + "%, " + o + "%)"
                                },
                                percentaString: l,
                                hslString: function(t, e) {
                                    if (e < 1 || t[3] && t[3] < 1) return c(t, e);
                                    return "hsl(" + t[0] + ", " + t[1] + "%, " + t[2] + "%)"
                                },
                                hslaString: c,
                                hwbString: function(t, e) {
                                    void 0 === e && (e = void 0 !== t[3] ? t[3] : 1);
                                    return "hwb(" + t[0] + ", " + t[1] + "%, " + t[2] + "%" + (void 0 !== e && 1 !== e ? ", " + e : "") + ")"
                                },
                                keyword: function(t) {
                                    return h[t.slice(0, 3)]
                                }
                            };
                            var h = {};
                            for (var p in n) h[n[p]] = p
                        }, {
                            6: 6
                        }],
                        3: [function(t, e, i) {
                            var n = t(5),
                                o = t(2),
                                a = function(t) {
                                    return t instanceof a ? t : this instanceof a ? (this.valid = !1, this.values = {
                                        rgb: [0, 0, 0],
                                        hsl: [0, 0, 0],
                                        hsv: [0, 0, 0],
                                        hwb: [0, 0, 0],
                                        cmyk: [0, 0, 0, 0],
                                        alpha: 1
                                    }, void("string" == typeof t ? (e = o.getRgba(t)) ? this.setValues("rgb", e) : (e = o.getHsla(t)) ? this.setValues("hsl", e) : (e = o.getHwb(t)) && this.setValues("hwb", e) : "object" == typeof t && (void 0 !== (e = t).r || void 0 !== e.red ? this.setValues("rgb", e) : void 0 !== e.l || void 0 !== e.lightness ? this.setValues("hsl", e) : void 0 !== e.v || void 0 !== e.value ? this.setValues("hsv", e) : void 0 !== e.w || void 0 !== e.whiteness ? this.setValues("hwb", e) : void 0 === e.c && void 0 === e.cyan || this.setValues("cmyk", e)))) : new a(t);
                                    var e
                                };
                            a.prototype = {
                                isValid: function() {
                                    return this.valid
                                },
                                rgb: function() {
                                    return this.setSpace("rgb", arguments)
                                },
                                hsl: function() {
                                    return this.setSpace("hsl", arguments)
                                },
                                hsv: function() {
                                    return this.setSpace("hsv", arguments)
                                },
                                hwb: function() {
                                    return this.setSpace("hwb", arguments)
                                },
                                cmyk: function() {
                                    return this.setSpace("cmyk", arguments)
                                },
                                rgbArray: function() {
                                    return this.values.rgb
                                },
                                hslArray: function() {
                                    return this.values.hsl
                                },
                                hsvArray: function() {
                                    return this.values.hsv
                                },
                                hwbArray: function() {
                                    var t = this.values;
                                    return 1 !== t.alpha ? t.hwb.concat([t.alpha]) : t.hwb
                                },
                                cmykArray: function() {
                                    return this.values.cmyk
                                },
                                rgbaArray: function() {
                                    var t = this.values;
                                    return t.rgb.concat([t.alpha])
                                },
                                hslaArray: function() {
                                    var t = this.values;
                                    return t.hsl.concat([t.alpha])
                                },
                                alpha: function(t) {
                                    return void 0 === t ? this.values.alpha : (this.setValues("alpha", t), this)
                                },
                                red: function(t) {
                                    return this.setChannel("rgb", 0, t)
                                },
                                green: function(t) {
                                    return this.setChannel("rgb", 1, t)
                                },
                                blue: function(t) {
                                    return this.setChannel("rgb", 2, t)
                                },
                                hue: function(t) {
                                    return t && (t = (t %= 360) < 0 ? 360 + t : t), this.setChannel("hsl", 0, t)
                                },
                                saturation: function(t) {
                                    return this.setChannel("hsl", 1, t)
                                },
                                lightness: function(t) {
                                    return this.setChannel("hsl", 2, t)
                                },
                                saturationv: function(t) {
                                    return this.setChannel("hsv", 1, t)
                                },
                                whiteness: function(t) {
                                    return this.setChannel("hwb", 1, t)
                                },
                                blackness: function(t) {
                                    return this.setChannel("hwb", 2, t)
                                },
                                value: function(t) {
                                    return this.setChannel("hsv", 2, t)
                                },
                                cyan: function(t) {
                                    return this.setChannel("cmyk", 0, t)
                                },
                                magenta: function(t) {
                                    return this.setChannel("cmyk", 1, t)
                                },
                                yellow: function(t) {
                                    return this.setChannel("cmyk", 2, t)
                                },
                                black: function(t) {
                                    return this.setChannel("cmyk", 3, t)
                                },
                                hexString: function() {
                                    return o.hexString(this.values.rgb)
                                },
                                rgbString: function() {
                                    return o.rgbString(this.values.rgb, this.values.alpha)
                                },
                                rgbaString: function() {
                                    return o.rgbaString(this.values.rgb, this.values.alpha)
                                },
                                percentString: function() {
                                    return o.percentString(this.values.rgb, this.values.alpha)
                                },
                                hslString: function() {
                                    return o.hslString(this.values.hsl, this.values.alpha)
                                },
                                hslaString: function() {
                                    return o.hslaString(this.values.hsl, this.values.alpha)
                                },
                                hwbString: function() {
                                    return o.hwbString(this.values.hwb, this.values.alpha)
                                },
                                keyword: function() {
                                    return o.keyword(this.values.rgb, this.values.alpha)
                                },
                                rgbNumber: function() {
                                    var t = this.values.rgb;
                                    return t[0] << 16 | t[1] << 8 | t[2]
                                },
                                luminosity: function() {
                                    for (var t = this.values.rgb, e = [], i = 0; i < t.length; i++) {
                                        var n = t[i] / 255;
                                        e[i] = n <= .03928 ? n / 12.92 : Math.pow((n + .055) / 1.055, 2.4)
                                    }
                                    return .2126 * e[0] + .7152 * e[1] + .0722 * e[2]
                                },
                                contrast: function(t) {
                                    var e = this.luminosity(),
                                        i = t.luminosity();
                                    return e > i ? (e + .05) / (i + .05) : (i + .05) / (e + .05)
                                },
                                level: function(t) {
                                    var e = this.contrast(t);
                                    return e >= 7.1 ? "AAA" : e >= 4.5 ? "AA" : ""
                                },
                                dark: function() {
                                    var t = this.values.rgb;
                                    return (299 * t[0] + 587 * t[1] + 114 * t[2]) / 1e3 < 128
                                },
                                light: function() {
                                    return !this.dark()
                                },
                                negate: function() {
                                    for (var t = [], e = 0; e < 3; e++) t[e] = 255 - this.values.rgb[e];
                                    return this.setValues("rgb", t), this
                                },
                                lighten: function(t) {
                                    var e = this.values.hsl;
                                    return e[2] += e[2] * t, this.setValues("hsl", e), this
                                },
                                darken: function(t) {
                                    var e = this.values.hsl;
                                    return e[2] -= e[2] * t, this.setValues("hsl", e), this
                                },
                                saturate: function(t) {
                                    var e = this.values.hsl;
                                    return e[1] += e[1] * t, this.setValues("hsl", e), this
                                },
                                desaturate: function(t) {
                                    var e = this.values.hsl;
                                    return e[1] -= e[1] * t, this.setValues("hsl", e), this
                                },
                                whiten: function(t) {
                                    var e = this.values.hwb;
                                    return e[1] += e[1] * t, this.setValues("hwb", e), this
                                },
                                blacken: function(t) {
                                    var e = this.values.hwb;
                                    return e[2] += e[2] * t, this.setValues("hwb", e), this
                                },
                                greyscale: function() {
                                    var t = this.values.rgb,
                                        e = .3 * t[0] + .59 * t[1] + .11 * t[2];
                                    return this.setValues("rgb", [e, e, e]), this
                                },
                                clearer: function(t) {
                                    var e = this.values.alpha;
                                    return this.setValues("alpha", e - e * t), this
                                },
                                opaquer: function(t) {
                                    var e = this.values.alpha;
                                    return this.setValues("alpha", e + e * t), this
                                },
                                rotate: function(t) {
                                    var e = this.values.hsl,
                                        i = (e[0] + t) % 360;
                                    return e[0] = i < 0 ? 360 + i : i, this.setValues("hsl", e), this
                                },
                                mix: function(t, e) {
                                    var i = t,
                                        n = void 0 === e ? .5 : e,
                                        o = 2 * n - 1,
                                        a = this.alpha() - i.alpha(),
                                        r = ((o * a == -1 ? o : (o + a) / (1 + o * a)) + 1) / 2,
                                        s = 1 - r;
                                    return this.rgb(r * this.red() + s * i.red(), r * this.green() + s * i.green(), r * this.blue() + s * i.blue()).alpha(this.alpha() * n + i.alpha() * (1 - n))
                                },
                                toJSON: function() {
                                    return this.rgb()
                                },
                                clone: function() {
                                    var t, e, i = new a,
                                        n = this.values,
                                        o = i.values;
                                    for (var r in n) n.hasOwnProperty(r) && (t = n[r], "[object Array]" === (e = {}.toString.call(t)) ? o[r] = t.slice(0) : "[object Number]" === e ? o[r] = t : console.error("unexpected color value:", t));
                                    return i
                                }
                            }, a.prototype.spaces = {
                                rgb: ["red", "green", "blue"],
                                hsl: ["hue", "saturation", "lightness"],
                                hsv: ["hue", "saturation", "value"],
                                hwb: ["hue", "whiteness", "blackness"],
                                cmyk: ["cyan", "magenta", "yellow", "black"]
                            }, a.prototype.maxes = {
                                rgb: [255, 255, 255],
                                hsl: [360, 100, 100],
                                hsv: [360, 100, 100],
                                hwb: [360, 100, 100],
                                cmyk: [100, 100, 100, 100]
                            }, a.prototype.getValues = function(t) {
                                for (var e = this.values, i = {}, n = 0; n < t.length; n++) i[t.charAt(n)] = e[t][n];
                                return 1 !== e.alpha && (i.a = e.alpha), i
                            }, a.prototype.setValues = function(t, e) {
                                var i, o, a = this.values,
                                    r = this.spaces,
                                    s = this.maxes,
                                    l = 1;
                                if (this.valid = !0, "alpha" === t) l = e;
                                else if (e.length) a[t] = e.slice(0, t.length), l = e[t.length];
                                else if (void 0 !== e[t.charAt(0)]) {
                                    for (i = 0; i < t.length; i++) a[t][i] = e[t.charAt(i)];
                                    l = e.a
                                } else if (void 0 !== e[r[t][0]]) {
                                    var c = r[t];
                                    for (i = 0; i < t.length; i++) a[t][i] = e[c[i]];
                                    l = e.alpha
                                }
                                if (a.alpha = Math.max(0, Math.min(1, void 0 === l ? a.alpha : l)), "alpha" === t) return !1;
                                for (i = 0; i < t.length; i++) o = Math.max(0, Math.min(s[t][i], a[t][i])), a[t][i] = Math.round(o);
                                for (var u in r) u !== t && (a[u] = n[t][u](a[t]));
                                return !0
                            }, a.prototype.setSpace = function(t, e) {
                                var i = e[0];
                                return void 0 === i ? this.getValues(t) : ("number" == typeof i && (i = Array.prototype.slice.call(e)), this.setValues(t, i), this)
                            }, a.prototype.setChannel = function(t, e, i) {
                                var n = this.values[t];
                                return void 0 === i ? n[e] : i === n[e] ? this : (n[e] = i, this.setValues(t, n), this)
                            }, "undefined" != typeof window && (window.Color = a), e.exports = a
                        }, {
                            2: 2,
                            5: 5
                        }],
                        4: [function(t, e, i) {
                            function n(t) {
                                var e, i, n = t[0] / 255,
                                    o = t[1] / 255,
                                    a = t[2] / 255,
                                    r = Math.min(n, o, a),
                                    s = Math.max(n, o, a),
                                    l = s - r;
                                return s == r ? e = 0 : n == s ? e = (o - a) / l : o == s ? e = 2 + (a - n) / l : a == s && (e = 4 + (n - o) / l), (e = Math.min(60 * e, 360)) < 0 && (e += 360), i = (r + s) / 2, [e, 100 * (s == r ? 0 : i <= .5 ? l / (s + r) : l / (2 - s - r)), 100 * i]
                            }

                            function o(t) {
                                var e, i, n = t[0],
                                    o = t[1],
                                    a = t[2],
                                    r = Math.min(n, o, a),
                                    s = Math.max(n, o, a),
                                    l = s - r;
                                return i = 0 == s ? 0 : l / s * 1e3 / 10, s == r ? e = 0 : n == s ? e = (o - a) / l : o == s ? e = 2 + (a - n) / l : a == s && (e = 4 + (n - o) / l), (e = Math.min(60 * e, 360)) < 0 && (e += 360), [e, i, s / 255 * 1e3 / 10]
                            }

                            function a(t) {
                                var e = t[0],
                                    i = t[1],
                                    o = t[2];
                                return [n(t)[0], 100 * (1 / 255 * Math.min(e, Math.min(i, o))), 100 * (o = 1 - 1 / 255 * Math.max(e, Math.max(i, o)))]
                            }

                            function s(t) {
                                var e, i = t[0] / 255,
                                    n = t[1] / 255,
                                    o = t[2] / 255;
                                return [100 * ((1 - i - (e = Math.min(1 - i, 1 - n, 1 - o))) / (1 - e) || 0), 100 * ((1 - n - e) / (1 - e) || 0), 100 * ((1 - o - e) / (1 - e) || 0), 100 * e]
                            }

                            function l(t) {
                                return M[JSON.stringify(t)]
                            }

                            function c(t) {
                                var e = t[0] / 255,
                                    i = t[1] / 255,
                                    n = t[2] / 255;
                                return [100 * (.4124 * (e = e > .04045 ? Math.pow((e + .055) / 1.055, 2.4) : e / 12.92) + .3576 * (i = i > .04045 ? Math.pow((i + .055) / 1.055, 2.4) : i / 12.92) + .1805 * (n = n > .04045 ? Math.pow((n + .055) / 1.055, 2.4) : n / 12.92)), 100 * (.2126 * e + .7152 * i + .0722 * n), 100 * (.0193 * e + .1192 * i + .9505 * n)]
                            }

                            function u(t) {
                                var e = c(t),
                                    i = e[0],
                                    n = e[1],
                                    o = e[2];
                                return n /= 100, o /= 108.883, i = (i /= 95.047) > .008856 ? Math.pow(i, 1 / 3) : 7.787 * i + 16 / 116, [116 * (n = n > .008856 ? Math.pow(n, 1 / 3) : 7.787 * n + 16 / 116) - 16, 500 * (i - n), 200 * (n - (o = o > .008856 ? Math.pow(o, 1 / 3) : 7.787 * o + 16 / 116))]
                            }

                            function d(t) {
                                var e, i, n, o, a, r = t[0] / 360,
                                    s = t[1] / 100,
                                    l = t[2] / 100;
                                if (0 == s) return [a = 255 * l, a, a];
                                e = 2 * l - (i = l < .5 ? l * (1 + s) : l + s - l * s), o = [0, 0, 0];
                                for (var c = 0; c < 3; c++)(n = r + 1 / 3 * -(c - 1)) < 0 && n++, n > 1 && n--, a = 6 * n < 1 ? e + 6 * (i - e) * n : 2 * n < 1 ? i : 3 * n < 2 ? e + (i - e) * (2 / 3 - n) * 6 : e, o[c] = 255 * a;
                                return o
                            }

                            function h(t) {
                                var e = t[0] / 60,
                                    i = t[1] / 100,
                                    n = t[2] / 100,
                                    o = Math.floor(e) % 6,
                                    a = e - Math.floor(e),
                                    r = 255 * n * (1 - i),
                                    s = 255 * n * (1 - i * a),
                                    l = 255 * n * (1 - i * (1 - a));
                                n *= 255;
                                switch (o) {
                                    case 0:
                                        return [n, l, r];
                                    case 1:
                                        return [s, n, r];
                                    case 2:
                                        return [r, n, l];
                                    case 3:
                                        return [r, s, n];
                                    case 4:
                                        return [l, r, n];
                                    case 5:
                                        return [n, r, s]
                                }
                            }

                            function p(t) {
                                var e, i, n, o, a = t[0] / 360,
                                    s = t[1] / 100,
                                    l = t[2] / 100,
                                    c = s + l;
                                switch (c > 1 && (s /= c, l /= c), i = 1 - l, n = 6 * a - (e = Math.floor(6 * a)), 0 != (1 & e) && (n = 1 - n), o = s + n * (i - s), e) {
                                    default:
                                    case 6:
                                    case 0:
                                        r = i, g = o, b = s;
                                        break;
                                    case 1:
                                        r = o, g = i, b = s;
                                        break;
                                    case 2:
                                        r = s, g = i, b = o;
                                        break;
                                    case 3:
                                        r = s, g = o, b = i;
                                        break;
                                    case 4:
                                        r = o, g = s, b = i;
                                        break;
                                    case 5:
                                        r = i, g = s, b = o
                                }
                                return [255 * r, 255 * g, 255 * b]
                            }

                            function f(t) {
                                var e = t[0] / 100,
                                    i = t[1] / 100,
                                    n = t[2] / 100,
                                    o = t[3] / 100;
                                return [255 * (1 - Math.min(1, e * (1 - o) + o)), 255 * (1 - Math.min(1, i * (1 - o) + o)), 255 * (1 - Math.min(1, n * (1 - o) + o))]
                            }

                            function m(t) {
                                var e, i, n, o = t[0] / 100,
                                    a = t[1] / 100,
                                    r = t[2] / 100;
                                return i = -.9689 * o + 1.8758 * a + .0415 * r, n = .0557 * o + -.204 * a + 1.057 * r, e = (e = 3.2406 * o + -1.5372 * a + -.4986 * r) > .0031308 ? 1.055 * Math.pow(e, 1 / 2.4) - .055 : e *= 12.92, i = i > .0031308 ? 1.055 * Math.pow(i, 1 / 2.4) - .055 : i *= 12.92, n = n > .0031308 ? 1.055 * Math.pow(n, 1 / 2.4) - .055 : n *= 12.92, [255 * (e = Math.min(Math.max(0, e), 1)), 255 * (i = Math.min(Math.max(0, i), 1)), 255 * (n = Math.min(Math.max(0, n), 1))]
                            }

                            function v(t) {
                                var e = t[0],
                                    i = t[1],
                                    n = t[2];
                                return i /= 100, n /= 108.883, e = (e /= 95.047) > .008856 ? Math.pow(e, 1 / 3) : 7.787 * e + 16 / 116, [116 * (i = i > .008856 ? Math.pow(i, 1 / 3) : 7.787 * i + 16 / 116) - 16, 500 * (e - i), 200 * (i - (n = n > .008856 ? Math.pow(n, 1 / 3) : 7.787 * n + 16 / 116))]
                            }

                            function y(t) {
                                var e, i, n, o, a = t[0],
                                    r = t[1],
                                    s = t[2];
                                return a <= 8 ? o = (i = 100 * a / 903.3) / 100 * 7.787 + 16 / 116 : (i = 100 * Math.pow((a + 16) / 116, 3), o = Math.pow(i / 100, 1 / 3)), [e = e / 95.047 <= .008856 ? e = 95.047 * (r / 500 + o - 16 / 116) / 7.787 : 95.047 * Math.pow(r / 500 + o, 3), i, n = n / 108.883 <= .008859 ? n = 108.883 * (o - s / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(o - s / 200, 3)]
                            }

                            function x(t) {
                                var e, i = t[0],
                                    n = t[1],
                                    o = t[2];
                                return (e = 360 * Math.atan2(o, n) / 2 / Math.PI) < 0 && (e += 360), [i, Math.sqrt(n * n + o * o), e]
                            }

                            function w(t) {
                                return m(y(t))
                            }

                            function k(t) {
                                var e, i = t[0],
                                    n = t[1];
                                return e = t[2] / 360 * 2 * Math.PI, [i, n * Math.cos(e), n * Math.sin(e)]
                            }

                            function C(t) {
                                return S[t]
                            }
                            e.exports = {
                                rgb2hsl: n,
                                rgb2hsv: o,
                                rgb2hwb: a,
                                rgb2cmyk: s,
                                rgb2keyword: l,
                                rgb2xyz: c,
                                rgb2lab: u,
                                rgb2lch: function(t) {
                                    return x(u(t))
                                },
                                hsl2rgb: d,
                                hsl2hsv: function(t) {
                                    var e = t[0],
                                        i = t[1] / 100,
                                        n = t[2] / 100;
                                    if (0 === n) return [0, 0, 0];
                                    return [e, 100 * (2 * (i *= (n *= 2) <= 1 ? n : 2 - n) / (n + i)), 100 * ((n + i) / 2)]
                                },
                                hsl2hwb: function(t) {
                                    return a(d(t))
                                },
                                hsl2cmyk: function(t) {
                                    return s(d(t))
                                },
                                hsl2keyword: function(t) {
                                    return l(d(t))
                                },
                                hsv2rgb: h,
                                hsv2hsl: function(t) {
                                    var e, i, n = t[0],
                                        o = t[1] / 100,
                                        a = t[2] / 100;
                                    return e = o * a, [n, 100 * (e = (e /= (i = (2 - o) * a) <= 1 ? i : 2 - i) || 0), 100 * (i /= 2)]
                                },
                                hsv2hwb: function(t) {
                                    return a(h(t))
                                },
                                hsv2cmyk: function(t) {
                                    return s(h(t))
                                },
                                hsv2keyword: function(t) {
                                    return l(h(t))
                                },
                                hwb2rgb: p,
                                hwb2hsl: function(t) {
                                    return n(p(t))
                                },
                                hwb2hsv: function(t) {
                                    return o(p(t))
                                },
                                hwb2cmyk: function(t) {
                                    return s(p(t))
                                },
                                hwb2keyword: function(t) {
                                    return l(p(t))
                                },
                                cmyk2rgb: f,
                                cmyk2hsl: function(t) {
                                    return n(f(t))
                                },
                                cmyk2hsv: function(t) {
                                    return o(f(t))
                                },
                                cmyk2hwb: function(t) {
                                    return a(f(t))
                                },
                                cmyk2keyword: function(t) {
                                    return l(f(t))
                                },
                                keyword2rgb: C,
                                keyword2hsl: function(t) {
                                    return n(C(t))
                                },
                                keyword2hsv: function(t) {
                                    return o(C(t))
                                },
                                keyword2hwb: function(t) {
                                    return a(C(t))
                                },
                                keyword2cmyk: function(t) {
                                    return s(C(t))
                                },
                                keyword2lab: function(t) {
                                    return u(C(t))
                                },
                                keyword2xyz: function(t) {
                                    return c(C(t))
                                },
                                xyz2rgb: m,
                                xyz2lab: v,
                                xyz2lch: function(t) {
                                    return x(v(t))
                                },
                                lab2xyz: y,
                                lab2rgb: w,
                                lab2lch: x,
                                lch2lab: k,
                                lch2xyz: function(t) {
                                    return y(k(t))
                                },
                                lch2rgb: function(t) {
                                    return w(k(t))
                                }
                            };
                            var S = {
                                    aliceblue: [240, 248, 255],
                                    antiquewhite: [250, 235, 215],
                                    aqua: [0, 255, 255],
                                    aquamarine: [127, 255, 212],
                                    azure: [240, 255, 255],
                                    beige: [245, 245, 220],
                                    bisque: [255, 228, 196],
                                    black: [0, 0, 0],
                                    blanchedalmond: [255, 235, 205],
                                    blue: [0, 0, 255],
                                    blueviolet: [138, 43, 226],
                                    brown: [165, 42, 42],
                                    burlywood: [222, 184, 135],
                                    cadetblue: [95, 158, 160],
                                    chartreuse: [127, 255, 0],
                                    chocolate: [210, 105, 30],
                                    coral: [255, 127, 80],
                                    cornflowerblue: [100, 149, 237],
                                    cornsilk: [255, 248, 220],
                                    crimson: [220, 20, 60],
                                    cyan: [0, 255, 255],
                                    darkblue: [0, 0, 139],
                                    darkcyan: [0, 139, 139],
                                    darkgoldenrod: [184, 134, 11],
                                    darkgray: [169, 169, 169],
                                    darkgreen: [0, 100, 0],
                                    darkgrey: [169, 169, 169],
                                    darkkhaki: [189, 183, 107],
                                    darkmagenta: [139, 0, 139],
                                    darkolivegreen: [85, 107, 47],
                                    darkorange: [255, 140, 0],
                                    darkorchid: [153, 50, 204],
                                    darkred: [139, 0, 0],
                                    darksalmon: [233, 150, 122],
                                    darkseagreen: [143, 188, 143],
                                    darkslateblue: [72, 61, 139],
                                    darkslategray: [47, 79, 79],
                                    darkslategrey: [47, 79, 79],
                                    darkturquoise: [0, 206, 209],
                                    darkviolet: [148, 0, 211],
                                    deeppink: [255, 20, 147],
                                    deepskyblue: [0, 191, 255],
                                    dimgray: [105, 105, 105],
                                    dimgrey: [105, 105, 105],
                                    dodgerblue: [30, 144, 255],
                                    firebrick: [178, 34, 34],
                                    floralwhite: [255, 250, 240],
                                    forestgreen: [34, 139, 34],
                                    fuchsia: [255, 0, 255],
                                    gainsboro: [220, 220, 220],
                                    ghostwhite: [248, 248, 255],
                                    gold: [255, 215, 0],
                                    goldenrod: [218, 165, 32],
                                    gray: [128, 128, 128],
                                    green: [0, 128, 0],
                                    greenyellow: [173, 255, 47],
                                    grey: [128, 128, 128],
                                    honeydew: [240, 255, 240],
                                    hotpink: [255, 105, 180],
                                    indianred: [205, 92, 92],
                                    indigo: [75, 0, 130],
                                    ivory: [255, 255, 240],
                                    khaki: [240, 230, 140],
                                    lavender: [230, 230, 250],
                                    lavenderblush: [255, 240, 245],
                                    lawngreen: [124, 252, 0],
                                    lemonchiffon: [255, 250, 205],
                                    lightblue: [173, 216, 230],
                                    lightcoral: [240, 128, 128],
                                    lightcyan: [224, 255, 255],
                                    lightgoldenrodyellow: [250, 250, 210],
                                    lightgray: [211, 211, 211],
                                    lightgreen: [144, 238, 144],
                                    lightgrey: [211, 211, 211],
                                    lightpink: [255, 182, 193],
                                    lightsalmon: [255, 160, 122],
                                    lightseagreen: [32, 178, 170],
                                    lightskyblue: [135, 206, 250],
                                    lightslategray: [119, 136, 153],
                                    lightslategrey: [119, 136, 153],
                                    lightsteelblue: [176, 196, 222],
                                    lightyellow: [255, 255, 224],
                                    lime: [0, 255, 0],
                                    limegreen: [50, 205, 50],
                                    linen: [250, 240, 230],
                                    magenta: [255, 0, 255],
                                    maroon: [128, 0, 0],
                                    mediumaquamarine: [102, 205, 170],
                                    mediumblue: [0, 0, 205],
                                    mediumorchid: [186, 85, 211],
                                    mediumpurple: [147, 112, 219],
                                    mediumseagreen: [60, 179, 113],
                                    mediumslateblue: [123, 104, 238],
                                    mediumspringgreen: [0, 250, 154],
                                    mediumturquoise: [72, 209, 204],
                                    mediumvioletred: [199, 21, 133],
                                    midnightblue: [25, 25, 112],
                                    mintcream: [245, 255, 250],
                                    mistyrose: [255, 228, 225],
                                    moccasin: [255, 228, 181],
                                    navajowhite: [255, 222, 173],
                                    navy: [0, 0, 128],
                                    oldlace: [253, 245, 230],
                                    olive: [128, 128, 0],
                                    olivedrab: [107, 142, 35],
                                    orange: [255, 165, 0],
                                    orangered: [255, 69, 0],
                                    orchid: [218, 112, 214],
                                    palegoldenrod: [238, 232, 170],
                                    palegreen: [152, 251, 152],
                                    paleturquoise: [175, 238, 238],
                                    palevioletred: [219, 112, 147],
                                    papayawhip: [255, 239, 213],
                                    peachpuff: [255, 218, 185],
                                    peru: [205, 133, 63],
                                    pink: [255, 192, 203],
                                    plum: [221, 160, 221],
                                    powderblue: [176, 224, 230],
                                    purple: [128, 0, 128],
                                    rebeccapurple: [102, 51, 153],
                                    red: [255, 0, 0],
                                    rosybrown: [188, 143, 143],
                                    royalblue: [65, 105, 225],
                                    saddlebrown: [139, 69, 19],
                                    salmon: [250, 128, 114],
                                    sandybrown: [244, 164, 96],
                                    seagreen: [46, 139, 87],
                                    seashell: [255, 245, 238],
                                    sienna: [160, 82, 45],
                                    silver: [192, 192, 192],
                                    skyblue: [135, 206, 235],
                                    slateblue: [106, 90, 205],
                                    slategray: [112, 128, 144],
                                    slategrey: [112, 128, 144],
                                    snow: [255, 250, 250],
                                    springgreen: [0, 255, 127],
                                    steelblue: [70, 130, 180],
                                    tan: [210, 180, 140],
                                    teal: [0, 128, 128],
                                    thistle: [216, 191, 216],
                                    tomato: [255, 99, 71],
                                    turquoise: [64, 224, 208],
                                    violet: [238, 130, 238],
                                    wheat: [245, 222, 179],
                                    white: [255, 255, 255],
                                    whitesmoke: [245, 245, 245],
                                    yellow: [255, 255, 0],
                                    yellowgreen: [154, 205, 50]
                                },
                                M = {};
                            for (var T in S) M[JSON.stringify(S[T])] = T
                        }, {}],
                        5: [function(t, e, i) {
                            var n = t(4),
                                o = function() {
                                    return new c
                                };
                            for (var a in n) {
                                o[a + "Raw"] = function(t) {
                                    return function(e) {
                                        return "number" == typeof e && (e = Array.prototype.slice.call(arguments)), n[t](e)
                                    }
                                }(a);
                                var r = /(\w+)2(\w+)/.exec(a),
                                    s = r[1],
                                    l = r[2];
                                (o[s] = o[s] || {})[l] = o[a] = function(t) {
                                    return function(e) {
                                        "number" == typeof e && (e = Array.prototype.slice.call(arguments));
                                        var i = n[t](e);
                                        if ("string" == typeof i || void 0 === i) return i;
                                        for (var o = 0; o < i.length; o++) i[o] = Math.round(i[o]);
                                        return i
                                    }
                                }(a)
                            }
                            var c = function() {
                                this.convs = {}
                            };
                            c.prototype.routeSpace = function(t, e) {
                                var i = e[0];
                                return void 0 === i ? this.getValues(t) : ("number" == typeof i && (i = Array.prototype.slice.call(e)), this.setValues(t, i))
                            }, c.prototype.setValues = function(t, e) {
                                return this.space = t, this.convs = {}, this.convs[t] = e, this
                            }, c.prototype.getValues = function(t) {
                                var e = this.convs[t];
                                if (!e) {
                                    var i = this.space,
                                        n = this.convs[i];
                                    e = o[i][t](n), this.convs[t] = e
                                }
                                return e
                            }, ["rgb", "hsl", "hsv", "cmyk", "keyword"].forEach(function(t) {
                                c.prototype[t] = function(e) {
                                    return this.routeSpace(t, arguments)
                                }
                            }), e.exports = o
                        }, {
                            4: 4
                        }],
                        6: [function(t, e, i) {
                            "use strict";
                            e.exports = {
                                aliceblue: [240, 248, 255],
                                antiquewhite: [250, 235, 215],
                                aqua: [0, 255, 255],
                                aquamarine: [127, 255, 212],
                                azure: [240, 255, 255],
                                beige: [245, 245, 220],
                                bisque: [255, 228, 196],
                                black: [0, 0, 0],
                                blanchedalmond: [255, 235, 205],
                                blue: [0, 0, 255],
                                blueviolet: [138, 43, 226],
                                brown: [165, 42, 42],
                                burlywood: [222, 184, 135],
                                cadetblue: [95, 158, 160],
                                chartreuse: [127, 255, 0],
                                chocolate: [210, 105, 30],
                                coral: [255, 127, 80],
                                cornflowerblue: [100, 149, 237],
                                cornsilk: [255, 248, 220],
                                crimson: [220, 20, 60],
                                cyan: [0, 255, 255],
                                darkblue: [0, 0, 139],
                                darkcyan: [0, 139, 139],
                                darkgoldenrod: [184, 134, 11],
                                darkgray: [169, 169, 169],
                                darkgreen: [0, 100, 0],
                                darkgrey: [169, 169, 169],
                                darkkhaki: [189, 183, 107],
                                darkmagenta: [139, 0, 139],
                                darkolivegreen: [85, 107, 47],
                                darkorange: [255, 140, 0],
                                darkorchid: [153, 50, 204],
                                darkred: [139, 0, 0],
                                darksalmon: [233, 150, 122],
                                darkseagreen: [143, 188, 143],
                                darkslateblue: [72, 61, 139],
                                darkslategray: [47, 79, 79],
                                darkslategrey: [47, 79, 79],
                                darkturquoise: [0, 206, 209],
                                darkviolet: [148, 0, 211],
                                deeppink: [255, 20, 147],
                                deepskyblue: [0, 191, 255],
                                dimgray: [105, 105, 105],
                                dimgrey: [105, 105, 105],
                                dodgerblue: [30, 144, 255],
                                firebrick: [178, 34, 34],
                                floralwhite: [255, 250, 240],
                                forestgreen: [34, 139, 34],
                                fuchsia: [255, 0, 255],
                                gainsboro: [220, 220, 220],
                                ghostwhite: [248, 248, 255],
                                gold: [255, 215, 0],
                                goldenrod: [218, 165, 32],
                                gray: [128, 128, 128],
                                green: [0, 128, 0],
                                greenyellow: [173, 255, 47],
                                grey: [128, 128, 128],
                                honeydew: [240, 255, 240],
                                hotpink: [255, 105, 180],
                                indianred: [205, 92, 92],
                                indigo: [75, 0, 130],
                                ivory: [255, 255, 240],
                                khaki: [240, 230, 140],
                                lavender: [230, 230, 250],
                                lavenderblush: [255, 240, 245],
                                lawngreen: [124, 252, 0],
                                lemonchiffon: [255, 250, 205],
                                lightblue: [173, 216, 230],
                                lightcoral: [240, 128, 128],
                                lightcyan: [224, 255, 255],
                                lightgoldenrodyellow: [250, 250, 210],
                                lightgray: [211, 211, 211],
                                lightgreen: [144, 238, 144],
                                lightgrey: [211, 211, 211],
                                lightpink: [255, 182, 193],
                                lightsalmon: [255, 160, 122],
                                lightseagreen: [32, 178, 170],
                                lightskyblue: [135, 206, 250],
                                lightslategray: [119, 136, 153],
                                lightslategrey: [119, 136, 153],
                                lightsteelblue: [176, 196, 222],
                                lightyellow: [255, 255, 224],
                                lime: [0, 255, 0],
                                limegreen: [50, 205, 50],
                                linen: [250, 240, 230],
                                magenta: [255, 0, 255],
                                maroon: [128, 0, 0],
                                mediumaquamarine: [102, 205, 170],
                                mediumblue: [0, 0, 205],
                                mediumorchid: [186, 85, 211],
                                mediumpurple: [147, 112, 219],
                                mediumseagreen: [60, 179, 113],
                                mediumslateblue: [123, 104, 238],
                                mediumspringgreen: [0, 250, 154],
                                mediumturquoise: [72, 209, 204],
                                mediumvioletred: [199, 21, 133],
                                midnightblue: [25, 25, 112],
                                mintcream: [245, 255, 250],
                                mistyrose: [255, 228, 225],
                                moccasin: [255, 228, 181],
                                navajowhite: [255, 222, 173],
                                navy: [0, 0, 128],
                                oldlace: [253, 245, 230],
                                olive: [128, 128, 0],
                                olivedrab: [107, 142, 35],
                                orange: [255, 165, 0],
                                orangered: [255, 69, 0],
                                orchid: [218, 112, 214],
                                palegoldenrod: [238, 232, 170],
                                palegreen: [152, 251, 152],
                                paleturquoise: [175, 238, 238],
                                palevioletred: [219, 112, 147],
                                papayawhip: [255, 239, 213],
                                peachpuff: [255, 218, 185],
                                peru: [205, 133, 63],
                                pink: [255, 192, 203],
                                plum: [221, 160, 221],
                                powderblue: [176, 224, 230],
                                purple: [128, 0, 128],
                                rebeccapurple: [102, 51, 153],
                                red: [255, 0, 0],
                                rosybrown: [188, 143, 143],
                                royalblue: [65, 105, 225],
                                saddlebrown: [139, 69, 19],
                                salmon: [250, 128, 114],
                                sandybrown: [244, 164, 96],
                                seagreen: [46, 139, 87],
                                seashell: [255, 245, 238],
                                sienna: [160, 82, 45],
                                silver: [192, 192, 192],
                                skyblue: [135, 206, 235],
                                slateblue: [106, 90, 205],
                                slategray: [112, 128, 144],
                                slategrey: [112, 128, 144],
                                snow: [255, 250, 250],
                                springgreen: [0, 255, 127],
                                steelblue: [70, 130, 180],
                                tan: [210, 180, 140],
                                teal: [0, 128, 128],
                                thistle: [216, 191, 216],
                                tomato: [255, 99, 71],
                                turquoise: [64, 224, 208],
                                violet: [238, 130, 238],
                                wheat: [245, 222, 179],
                                white: [255, 255, 255],
                                whitesmoke: [245, 245, 245],
                                yellow: [255, 255, 0],
                                yellowgreen: [154, 205, 50]
                            }
                        }, {}],
                        7: [function(t, e, i) {
                            var n = t(30)();
                            n.helpers = t(46), t(28)(n), n.Animation = t(22), n.animationService = t(23), n.defaults = t(26), n.Element = t(27), n.elements = t(41), n.Interaction = t(29), n.layouts = t(31), n.platform = t(49), n.plugins = t(32), n.Scale = t(33), n.scaleService = t(34), n.Ticks = t(35), n.Tooltip = t(36), t(24)(n), t(25)(n), t(56)(n), t(54)(n), t(55)(n), t(57)(n), t(58)(n), t(59)(n), t(15)(n), t(16)(n), t(17)(n), t(18)(n), t(19)(n), t(20)(n), t(21)(n), t(8)(n), t(9)(n), t(10)(n), t(11)(n), t(12)(n), t(13)(n), t(14)(n);
                            var o = t(50);
                            for (var a in o) o.hasOwnProperty(a) && n.plugins.register(o[a]);
                            n.platform.initialize(), e.exports = n, "undefined" != typeof window && (window.Chart = n), n.Legend = o.legend._element, n.Title = o.title._element, n.pluginService = n.plugins, n.PluginBase = n.Element.extend({}), n.canvasHelpers = n.helpers.canvas, n.layoutService = n.layouts
                        }, {
                            10: 10,
                            11: 11,
                            12: 12,
                            13: 13,
                            14: 14,
                            15: 15,
                            16: 16,
                            17: 17,
                            18: 18,
                            19: 19,
                            20: 20,
                            21: 21,
                            22: 22,
                            23: 23,
                            24: 24,
                            25: 25,
                            26: 26,
                            27: 27,
                            28: 28,
                            29: 29,
                            30: 30,
                            31: 31,
                            32: 32,
                            33: 33,
                            34: 34,
                            35: 35,
                            36: 36,
                            41: 41,
                            46: 46,
                            49: 49,
                            50: 50,
                            54: 54,
                            55: 55,
                            56: 56,
                            57: 57,
                            58: 58,
                            59: 59,
                            8: 8,
                            9: 9
                        }],
                        8: [function(t, e, i) {
                            "use strict";
                            e.exports = function(t) {
                                t.Bar = function(e, i) {
                                    return i.type = "bar", new t(e, i)
                                }
                            }
                        }, {}],
                        9: [function(t, e, i) {
                            "use strict";
                            e.exports = function(t) {
                                t.Bubble = function(e, i) {
                                    return i.type = "bubble", new t(e, i)
                                }
                            }
                        }, {}],
                        10: [function(t, e, i) {
                            "use strict";
                            e.exports = function(t) {
                                t.Doughnut = function(e, i) {
                                    return i.type = "doughnut", new t(e, i)
                                }
                            }
                        }, {}],
                        11: [function(t, e, i) {
                            "use strict";
                            e.exports = function(t) {
                                t.Line = function(e, i) {
                                    return i.type = "line", new t(e, i)
                                }
                            }
                        }, {}],
                        12: [function(t, e, i) {
                            "use strict";
                            e.exports = function(t) {
                                t.PolarArea = function(e, i) {
                                    return i.type = "polarArea", new t(e, i)
                                }
                            }
                        }, {}],
                        13: [function(t, e, i) {
                            "use strict";
                            e.exports = function(t) {
                                t.Radar = function(e, i) {
                                    return i.type = "radar", new t(e, i)
                                }
                            }
                        }, {}],
                        14: [function(t, e, i) {
                            "use strict";
                            e.exports = function(t) {
                                t.Scatter = function(e, i) {
                                    return i.type = "scatter", new t(e, i)
                                }
                            }
                        }, {}],
                        15: [function(t, e, i) {
                            "use strict";
                            var n = t(26),
                                o = t(41),
                                a = t(46);
                            n._set("bar", {
                                hover: {
                                    mode: "label"
                                },
                                scales: {
                                    xAxes: [{
                                        type: "category",
                                        categoryPercentage: .8,
                                        barPercentage: .9,
                                        offset: !0,
                                        gridLines: {
                                            offsetGridLines: !0
                                        }
                                    }],
                                    yAxes: [{
                                        type: "linear"
                                    }]
                                }
                            }), n._set("horizontalBar", {
                                hover: {
                                    mode: "index",
                                    axis: "y"
                                },
                                scales: {
                                    xAxes: [{
                                        type: "linear",
                                        position: "bottom"
                                    }],
                                    yAxes: [{
                                        position: "left",
                                        type: "category",
                                        categoryPercentage: .8,
                                        barPercentage: .9,
                                        offset: !0,
                                        gridLines: {
                                            offsetGridLines: !0
                                        }
                                    }]
                                },
                                elements: {
                                    rectangle: {
                                        borderSkipped: "left"
                                    }
                                },
                                tooltips: {
                                    callbacks: {
                                        title: function(t, e) {
                                            var i = "";
                                            return t.length > 0 && (t[0].yLabel ? i = t[0].yLabel : e.labels.length > 0 && t[0].index < e.labels.length && (i = e.labels[t[0].index])), i
                                        },
                                        label: function(t, e) {
                                            return (e.datasets[t.datasetIndex].label || "") + ": " + t.xLabel
                                        }
                                    },
                                    mode: "index",
                                    axis: "y"
                                }
                            }), e.exports = function(t) {
                                t.controllers.bar = t.DatasetController.extend({
                                    dataElementType: o.Rectangle,
                                    initialize: function() {
                                        var e;
                                        t.DatasetController.prototype.initialize.apply(this, arguments), (e = this.getMeta()).stack = this.getDataset().stack, e.bar = !0
                                    },
                                    update: function(t) {
                                        var e, i, n = this.getMeta().data;
                                        for (this._ruler = this.getRuler(), e = 0, i = n.length; e < i; ++e) this.updateElement(n[e], e, t)
                                    },
                                    updateElement: function(t, e, i) {
                                        var n = this,
                                            o = n.chart,
                                            r = n.getMeta(),
                                            s = n.getDataset(),
                                            l = t.custom || {},
                                            c = o.options.elements.rectangle;
                                        t._xScale = n.getScaleForId(r.xAxisID), t._yScale = n.getScaleForId(r.yAxisID), t._datasetIndex = n.index, t._index = e, t._model = {
                                            datasetLabel: s.label,
                                            label: o.data.labels[e],
                                            borderSkipped: l.borderSkipped ? l.borderSkipped : c.borderSkipped,
                                            backgroundColor: l.backgroundColor ? l.backgroundColor : a.valueAtIndexOrDefault(s.backgroundColor, e, c.backgroundColor),
                                            borderColor: l.borderColor ? l.borderColor : a.valueAtIndexOrDefault(s.borderColor, e, c.borderColor),
                                            borderWidth: l.borderWidth ? l.borderWidth : a.valueAtIndexOrDefault(s.borderWidth, e, c.borderWidth)
                                        }, n.updateElementGeometry(t, e, i), t.pivot()
                                    },
                                    updateElementGeometry: function(t, e, i) {
                                        var n = this,
                                            o = t._model,
                                            a = n.getValueScale(),
                                            r = a.getBasePixel(),
                                            s = a.isHorizontal(),
                                            l = n._ruler || n.getRuler(),
                                            c = n.calculateBarValuePixels(n.index, e),
                                            u = n.calculateBarIndexPixels(n.index, e, l);
                                        o.horizontal = s, o.base = i ? r : c.base, o.x = s ? i ? r : c.head : u.center, o.y = s ? u.center : i ? r : c.head, o.height = s ? u.size : void 0, o.width = s ? void 0 : u.size
                                    },
                                    getValueScaleId: function() {
                                        return this.getMeta().yAxisID
                                    },
                                    getIndexScaleId: function() {
                                        return this.getMeta().xAxisID
                                    },
                                    getValueScale: function() {
                                        return this.getScaleForId(this.getValueScaleId())
                                    },
                                    getIndexScale: function() {
                                        return this.getScaleForId(this.getIndexScaleId())
                                    },
                                    _getStacks: function(t) {
                                        var e, i, n = this.chart,
                                            o = this.getIndexScale().options.stacked,
                                            a = void 0 === t ? n.data.datasets.length : t + 1,
                                            r = [];
                                        for (e = 0; e < a; ++e)(i = n.getDatasetMeta(e)).bar && n.isDatasetVisible(e) && (!1 === o || !0 === o && -1 === r.indexOf(i.stack) || void 0 === o && (void 0 === i.stack || -1 === r.indexOf(i.stack))) && r.push(i.stack);
                                        return r
                                    },
                                    getStackCount: function() {
                                        return this._getStacks().length
                                    },
                                    getStackIndex: function(t, e) {
                                        var i = this._getStacks(t),
                                            n = void 0 !== e ? i.indexOf(e) : -1;
                                        return -1 === n ? i.length - 1 : n
                                    },
                                    getRuler: function() {
                                        var t, e, i = this.getIndexScale(),
                                            n = this.getStackCount(),
                                            o = this.index,
                                            r = i.isHorizontal(),
                                            s = r ? i.left : i.top,
                                            l = s + (r ? i.width : i.height),
                                            c = [];
                                        for (t = 0, e = this.getMeta().data.length; t < e; ++t) c.push(i.getPixelForValue(null, t, o));
                                        return {
                                            min: a.isNullOrUndef(i.options.barThickness) ? function(t, e) {
                                                var i, n, o, a, r = t.isHorizontal() ? t.width : t.height,
                                                    s = t.getTicks();
                                                for (o = 1, a = e.length; o < a; ++o) r = Math.min(r, e[o] - e[o - 1]);
                                                for (o = 0, a = s.length; o < a; ++o) n = t.getPixelForTick(o), r = o > 0 ? Math.min(r, n - i) : r, i = n;
                                                return r
                                            }(i, c) : -1,
                                            pixels: c,
                                            start: s,
                                            end: l,
                                            stackCount: n,
                                            scale: i
                                        }
                                    },
                                    calculateBarValuePixels: function(t, e) {
                                        var i, n, o, a, r, s, l = this.chart,
                                            c = this.getMeta(),
                                            u = this.getValueScale(),
                                            d = l.data.datasets,
                                            h = u.getRightValue(d[t].data[e]),
                                            p = u.options.stacked,
                                            f = c.stack,
                                            m = 0;
                                        if (p || void 0 === p && void 0 !== f)
                                            for (i = 0; i < t; ++i)(n = l.getDatasetMeta(i)).bar && n.stack === f && n.controller.getValueScaleId() === u.id && l.isDatasetVisible(i) && (o = u.getRightValue(d[i].data[e]), (h < 0 && o < 0 || h >= 0 && o > 0) && (m += o));
                                        return a = u.getPixelForValue(m), {
                                            size: s = ((r = u.getPixelForValue(m + h)) - a) / 2,
                                            base: a,
                                            head: r,
                                            center: r + s / 2
                                        }
                                    },
                                    calculateBarIndexPixels: function(t, e, i) {
                                        var n = i.scale.options,
                                            o = "flex" === n.barThickness ? function(t, e, i) {
                                                var n, o = e.pixels,
                                                    a = o[t],
                                                    r = t > 0 ? o[t - 1] : null,
                                                    s = t < o.length - 1 ? o[t + 1] : null,
                                                    l = i.categoryPercentage;
                                                return null === r && (r = a - (null === s ? e.end - a : s - a)), null === s && (s = a + a - r), n = a - (a - r) / 2 * l, {
                                                    chunk: (s - r) / 2 * l / e.stackCount,
                                                    ratio: i.barPercentage,
                                                    start: n
                                                }
                                            }(e, i, n) : function(t, e, i) {
                                                var n, o, r = i.barThickness,
                                                    s = e.stackCount,
                                                    l = e.pixels[t];
                                                return a.isNullOrUndef(r) ? (n = e.min * i.categoryPercentage, o = i.barPercentage) : (n = r * s, o = 1), {
                                                    chunk: n / s,
                                                    ratio: o,
                                                    start: l - n / 2
                                                }
                                            }(e, i, n),
                                            r = this.getStackIndex(t, this.getMeta().stack),
                                            s = o.start + o.chunk * r + o.chunk / 2,
                                            l = Math.min(a.valueOrDefault(n.maxBarThickness, 1 / 0), o.chunk * o.ratio);
                                        return {
                                            base: s - l / 2,
                                            head: s + l / 2,
                                            center: s,
                                            size: l
                                        }
                                    },
                                    draw: function() {
                                        var t = this.chart,
                                            e = this.getValueScale(),
                                            i = this.getMeta().data,
                                            n = this.getDataset(),
                                            o = i.length,
                                            r = 0;
                                        for (a.canvas.clipArea(t.ctx, t.chartArea); r < o; ++r) isNaN(e.getRightValue(n.data[r])) || i[r].draw();
                                        a.canvas.unclipArea(t.ctx)
                                    }
                                }), t.controllers.horizontalBar = t.controllers.bar.extend({
                                    getValueScaleId: function() {
                                        return this.getMeta().xAxisID
                                    },
                                    getIndexScaleId: function() {
                                        return this.getMeta().yAxisID
                                    }
                                })
                            }
                        }, {
                            26: 26,
                            41: 41,
                            46: 46
                        }],
                        16: [function(t, e, i) {
                            "use strict";
                            var n = t(26),
                                o = t(41),
                                a = t(46);
                            n._set("bubble", {
                                hover: {
                                    mode: "single"
                                },
                                scales: {
                                    xAxes: [{
                                        type: "linear",
                                        position: "bottom",
                                        id: "x-axis-0"
                                    }],
                                    yAxes: [{
                                        type: "linear",
                                        position: "left",
                                        id: "y-axis-0"
                                    }]
                                },
                                tooltips: {
                                    callbacks: {
                                        title: function() {
                                            return ""
                                        },
                                        label: function(t, e) {
                                            var i = e.datasets[t.datasetIndex].label || "",
                                                n = e.datasets[t.datasetIndex].data[t.index];
                                            return i + ": (" + t.xLabel + ", " + t.yLabel + ", " + n.r + ")"
                                        }
                                    }
                                }
                            }), e.exports = function(t) {
                                t.controllers.bubble = t.DatasetController.extend({
                                    dataElementType: o.Point,
                                    update: function(t) {
                                        var e = this,
                                            i = e.getMeta().data;
                                        a.each(i, function(i, n) {
                                            e.updateElement(i, n, t)
                                        })
                                    },
                                    updateElement: function(t, e, i) {
                                        var n = this,
                                            o = n.getMeta(),
                                            a = t.custom || {},
                                            r = n.getScaleForId(o.xAxisID),
                                            s = n.getScaleForId(o.yAxisID),
                                            l = n._resolveElementOptions(t, e),
                                            c = n.getDataset().data[e],
                                            u = n.index,
                                            d = i ? r.getPixelForDecimal(.5) : r.getPixelForValue("object" == typeof c ? c : NaN, e, u),
                                            h = i ? s.getBasePixel() : s.getPixelForValue(c, e, u);
                                        t._xScale = r, t._yScale = s, t._options = l, t._datasetIndex = u, t._index = e, t._model = {
                                            backgroundColor: l.backgroundColor,
                                            borderColor: l.borderColor,
                                            borderWidth: l.borderWidth,
                                            hitRadius: l.hitRadius,
                                            pointStyle: l.pointStyle,
                                            rotation: l.rotation,
                                            radius: i ? 0 : l.radius,
                                            skip: a.skip || isNaN(d) || isNaN(h),
                                            x: d,
                                            y: h
                                        }, t.pivot()
                                    },
                                    setHoverStyle: function(t) {
                                        var e = t._model,
                                            i = t._options;
                                        t.$previousStyle = {
                                            backgroundColor: e.backgroundColor,
                                            borderColor: e.borderColor,
                                            borderWidth: e.borderWidth,
                                            radius: e.radius
                                        }, e.backgroundColor = a.valueOrDefault(i.hoverBackgroundColor, a.getHoverColor(i.backgroundColor)), e.borderColor = a.valueOrDefault(i.hoverBorderColor, a.getHoverColor(i.borderColor)), e.borderWidth = a.valueOrDefault(i.hoverBorderWidth, i.borderWidth), e.radius = i.radius + i.hoverRadius
                                    },
                                    _resolveElementOptions: function(t, e) {
                                        var i, n, o, r = this.chart,
                                            s = r.data.datasets[this.index],
                                            l = t.custom || {},
                                            c = r.options.elements.point,
                                            u = a.options.resolve,
                                            d = s.data[e],
                                            h = {},
                                            p = {
                                                chart: r,
                                                dataIndex: e,
                                                dataset: s,
                                                datasetIndex: this.index
                                            },
                                            f = ["backgroundColor", "borderColor", "borderWidth", "hoverBackgroundColor", "hoverBorderColor", "hoverBorderWidth", "hoverRadius", "hitRadius", "pointStyle", "rotation"];
                                        for (i = 0, n = f.length; i < n; ++i) h[o = f[i]] = u([l[o], s[o], c[o]], p, e);
                                        return h.radius = u([l.radius, d ? d.r : void 0, s.radius, c.radius], p, e), h
                                    }
                                })
                            }
                        }, {
                            26: 26,
                            41: 41,
                            46: 46
                        }],
                        17: [function(t, e, i) {
                            "use strict";
                            var n = t(26),
                                o = t(41),
                                a = t(46);
                            n._set("doughnut", {
                                animation: {
                                    animateRotate: !0,
                                    animateScale: !1
                                },
                                hover: {
                                    mode: "single"
                                },
                                legendCallback: function(t) {
                                    var e = [];
                                    e.push('<ul class="' + t.id + '-legend">');
                                    var i = t.data,
                                        n = i.datasets,
                                        o = i.labels;
                                    if (n.length)
                                        for (var a = 0; a < n[0].data.length; ++a) e.push('<li><span style="background-color:' + n[0].backgroundColor[a] + '"></span>'), o[a] && e.push(o[a]), e.push("</li>");
                                    return e.push("</ul>"), e.join("")
                                },
                                legend: {
                                    labels: {
                                        generateLabels: function(t) {
                                            var e = t.data;
                                            return e.labels.length && e.datasets.length ? e.labels.map(function(i, n) {
                                                var o = t.getDatasetMeta(0),
                                                    r = e.datasets[0],
                                                    s = o.data[n],
                                                    l = s && s.custom || {},
                                                    c = a.valueAtIndexOrDefault,
                                                    u = t.options.elements.arc;
                                                return {
                                                    text: i,
                                                    fillStyle: l.backgroundColor ? l.backgroundColor : c(r.backgroundColor, n, u.backgroundColor),
                                                    strokeStyle: l.borderColor ? l.borderColor : c(r.borderColor, n, u.borderColor),
                                                    lineWidth: l.borderWidth ? l.borderWidth : c(r.borderWidth, n, u.borderWidth),
                                                    hidden: isNaN(r.data[n]) || o.data[n].hidden,
                                                    index: n
                                                }
                                            }) : []
                                        }
                                    },
                                    onClick: function(t, e) {
                                        var i, n, o, a = e.index,
                                            r = this.chart;
                                        for (i = 0, n = (r.data.datasets || []).length; i < n; ++i)(o = r.getDatasetMeta(i)).data[a] && (o.data[a].hidden = !o.data[a].hidden);
                                        r.update()
                                    }
                                },
                                cutoutPercentage: 50,
                                rotation: -.5 * Math.PI,
                                circumference: 2 * Math.PI,
                                tooltips: {
                                    callbacks: {
                                        title: function() {
                                            return ""
                                        },
                                        label: function(t, e) {
                                            var i = e.labels[t.index],
                                                n = ": " + e.datasets[t.datasetIndex].data[t.index];
                                            return a.isArray(i) ? (i = i.slice())[0] += n : i += n, i
                                        }
                                    }
                                }
                            }), n._set("pie", a.clone(n.doughnut)), n._set("pie", {
                                cutoutPercentage: 0
                            }), e.exports = function(t) {
                                t.controllers.doughnut = t.controllers.pie = t.DatasetController.extend({
                                    dataElementType: o.Arc,
                                    linkScales: a.noop,
                                    getRingIndex: function(t) {
                                        for (var e = 0, i = 0; i < t; ++i) this.chart.isDatasetVisible(i) && ++e;
                                        return e
                                    },
                                    update: function(t) {
                                        var e = this,
                                            i = e.chart,
                                            n = i.chartArea,
                                            o = i.options,
                                            r = o.elements.arc,
                                            s = n.right - n.left - r.borderWidth,
                                            l = n.bottom - n.top - r.borderWidth,
                                            c = Math.min(s, l),
                                            u = {
                                                x: 0,
                                                y: 0
                                            },
                                            d = e.getMeta(),
                                            h = o.cutoutPercentage,
                                            p = o.circumference;
                                        if (p < 2 * Math.PI) {
                                            var f = o.rotation % (2 * Math.PI),
                                                m = (f += 2 * Math.PI * (f >= Math.PI ? -1 : f < -Math.PI ? 1 : 0)) + p,
                                                g = {
                                                    x: Math.cos(f),
                                                    y: Math.sin(f)
                                                },
                                                v = {
                                                    x: Math.cos(m),
                                                    y: Math.sin(m)
                                                },
                                                y = f <= 0 && m >= 0 || f <= 2 * Math.PI && 2 * Math.PI <= m,
                                                b = f <= .5 * Math.PI && .5 * Math.PI <= m || f <= 2.5 * Math.PI && 2.5 * Math.PI <= m,
                                                x = f <= -Math.PI && -Math.PI <= m || f <= Math.PI && Math.PI <= m,
                                                w = f <= .5 * -Math.PI && .5 * -Math.PI <= m || f <= 1.5 * Math.PI && 1.5 * Math.PI <= m,
                                                k = h / 100,
                                                C = {
                                                    x: x ? -1 : Math.min(g.x * (g.x < 0 ? 1 : k), v.x * (v.x < 0 ? 1 : k)),
                                                    y: w ? -1 : Math.min(g.y * (g.y < 0 ? 1 : k), v.y * (v.y < 0 ? 1 : k))
                                                },
                                                S = {
                                                    x: y ? 1 : Math.max(g.x * (g.x > 0 ? 1 : k), v.x * (v.x > 0 ? 1 : k)),
                                                    y: b ? 1 : Math.max(g.y * (g.y > 0 ? 1 : k), v.y * (v.y > 0 ? 1 : k))
                                                },
                                                M = {
                                                    width: .5 * (S.x - C.x),
                                                    height: .5 * (S.y - C.y)
                                                };
                                            c = Math.min(s / M.width, l / M.height), u = {
                                                x: -.5 * (S.x + C.x),
                                                y: -.5 * (S.y + C.y)
                                            }
                                        }
                                        i.borderWidth = e.getMaxBorderWidth(d.data), i.outerRadius = Math.max((c - i.borderWidth) / 2, 0), i.innerRadius = Math.max(h ? i.outerRadius / 100 * h : 0, 0), i.radiusLength = (i.outerRadius - i.innerRadius) / i.getVisibleDatasetCount(), i.offsetX = u.x * i.outerRadius, i.offsetY = u.y * i.outerRadius, d.total = e.calculateTotal(), e.outerRadius = i.outerRadius - i.radiusLength * e.getRingIndex(e.index), e.innerRadius = Math.max(e.outerRadius - i.radiusLength, 0), a.each(d.data, function(i, n) {
                                            e.updateElement(i, n, t)
                                        })
                                    },
                                    updateElement: function(t, e, i) {
                                        var n = this,
                                            o = n.chart,
                                            r = o.chartArea,
                                            s = o.options,
                                            l = s.animation,
                                            c = (r.left + r.right) / 2,
                                            u = (r.top + r.bottom) / 2,
                                            d = s.rotation,
                                            h = s.rotation,
                                            p = n.getDataset(),
                                            f = i && l.animateRotate ? 0 : t.hidden ? 0 : n.calculateCircumference(p.data[e]) * (s.circumference / (2 * Math.PI)),
                                            m = i && l.animateScale ? 0 : n.innerRadius,
                                            g = i && l.animateScale ? 0 : n.outerRadius,
                                            v = a.valueAtIndexOrDefault;
                                        a.extend(t, {
                                            _datasetIndex: n.index,
                                            _index: e,
                                            _model: {
                                                x: c + o.offsetX,
                                                y: u + o.offsetY,
                                                startAngle: d,
                                                endAngle: h,
                                                circumference: f,
                                                outerRadius: g,
                                                innerRadius: m,
                                                label: v(p.label, e, o.data.labels[e])
                                            }
                                        });
                                        var y = t._model,
                                            b = t.custom || {},
                                            x = a.valueAtIndexOrDefault,
                                            w = this.chart.options.elements.arc;
                                        y.backgroundColor = b.backgroundColor ? b.backgroundColor : x(p.backgroundColor, e, w.backgroundColor), y.borderColor = b.borderColor ? b.borderColor : x(p.borderColor, e, w.borderColor), y.borderWidth = b.borderWidth ? b.borderWidth : x(p.borderWidth, e, w.borderWidth), i && l.animateRotate || (y.startAngle = 0 === e ? s.rotation : n.getMeta().data[e - 1]._model.endAngle, y.endAngle = y.startAngle + y.circumference), t.pivot()
                                    },
                                    calculateTotal: function() {
                                        var t, e = this.getDataset(),
                                            i = this.getMeta(),
                                            n = 0;
                                        return a.each(i.data, function(i, o) {
                                            t = e.data[o], isNaN(t) || i.hidden || (n += Math.abs(t))
                                        }), n
                                    },
                                    calculateCircumference: function(t) {
                                        var e = this.getMeta().total;
                                        return e > 0 && !isNaN(t) ? 2 * Math.PI * (Math.abs(t) / e) : 0
                                    },
                                    getMaxBorderWidth: function(t) {
                                        for (var e, i, n = 0, o = this.index, a = t.length, r = 0; r < a; r++) e = t[r]._model ? t[r]._model.borderWidth : 0, n = (i = t[r]._chart ? t[r]._chart.config.data.datasets[o].hoverBorderWidth : 0) > (n = e > n ? e : n) ? i : n;
                                        return n
                                    }
                                })
                            }
                        }, {
                            26: 26,
                            41: 41,
                            46: 46
                        }],
                        18: [function(t, e, i) {
                            "use strict";
                            var n = t(26),
                                o = t(41),
                                a = t(46);
                            n._set("line", {
                                showLines: !0,
                                spanGaps: !1,
                                hover: {
                                    mode: "label"
                                },
                                scales: {
                                    xAxes: [{
                                        type: "category",
                                        id: "x-axis-0"
                                    }],
                                    yAxes: [{
                                        type: "linear",
                                        id: "y-axis-0"
                                    }]
                                }
                            }), e.exports = function(t) {
                                function e(t, e) {
                                    return a.valueOrDefault(t.showLine, e.showLines)
                                }
                                t.controllers.line = t.DatasetController.extend({
                                    datasetElementType: o.Line,
                                    dataElementType: o.Point,
                                    update: function(t) {
                                        var i, n, o, r = this,
                                            s = r.getMeta(),
                                            l = s.dataset,
                                            c = s.data || [],
                                            u = r.chart.options,
                                            d = u.elements.line,
                                            h = r.getScaleForId(s.yAxisID),
                                            p = r.getDataset(),
                                            f = e(p, u);
                                        for (f && (o = l.custom || {}, void 0 !== p.tension && void 0 === p.lineTension && (p.lineTension = p.tension), l._scale = h, l._datasetIndex = r.index, l._children = c, l._model = {
                                                spanGaps: p.spanGaps ? p.spanGaps : u.spanGaps,
                                                tension: o.tension ? o.tension : a.valueOrDefault(p.lineTension, d.tension),
                                                backgroundColor: o.backgroundColor ? o.backgroundColor : p.backgroundColor || d.backgroundColor,
                                                borderWidth: o.borderWidth ? o.borderWidth : p.borderWidth || d.borderWidth,
                                                borderColor: o.borderColor ? o.borderColor : p.borderColor || d.borderColor,
                                                borderCapStyle: o.borderCapStyle ? o.borderCapStyle : p.borderCapStyle || d.borderCapStyle,
                                                borderDash: o.borderDash ? o.borderDash : p.borderDash || d.borderDash,
                                                borderDashOffset: o.borderDashOffset ? o.borderDashOffset : p.borderDashOffset || d.borderDashOffset,
                                                borderJoinStyle: o.borderJoinStyle ? o.borderJoinStyle : p.borderJoinStyle || d.borderJoinStyle,
                                                fill: o.fill ? o.fill : void 0 !== p.fill ? p.fill : d.fill,
                                                steppedLine: o.steppedLine ? o.steppedLine : a.valueOrDefault(p.steppedLine, d.stepped),
                                                cubicInterpolationMode: o.cubicInterpolationMode ? o.cubicInterpolationMode : a.valueOrDefault(p.cubicInterpolationMode, d.cubicInterpolationMode)
                                            }, l.pivot()), i = 0, n = c.length; i < n; ++i) r.updateElement(c[i], i, t);
                                        for (f && 0 !== l._model.tension && r.updateBezierControlPoints(), i = 0, n = c.length; i < n; ++i) c[i].pivot()
                                    },
                                    getPointBackgroundColor: function(t, e) {
                                        var i = this.chart.options.elements.point.backgroundColor,
                                            n = this.getDataset(),
                                            o = t.custom || {};
                                        return o.backgroundColor ? i = o.backgroundColor : n.pointBackgroundColor ? i = a.valueAtIndexOrDefault(n.pointBackgroundColor, e, i) : n.backgroundColor && (i = n.backgroundColor), i
                                    },
                                    getPointBorderColor: function(t, e) {
                                        var i = this.chart.options.elements.point.borderColor,
                                            n = this.getDataset(),
                                            o = t.custom || {};
                                        return o.borderColor ? i = o.borderColor : n.pointBorderColor ? i = a.valueAtIndexOrDefault(n.pointBorderColor, e, i) : n.borderColor && (i = n.borderColor), i
                                    },
                                    getPointBorderWidth: function(t, e) {
                                        var i = this.chart.options.elements.point.borderWidth,
                                            n = this.getDataset(),
                                            o = t.custom || {};
                                        return isNaN(o.borderWidth) ? !isNaN(n.pointBorderWidth) || a.isArray(n.pointBorderWidth) ? i = a.valueAtIndexOrDefault(n.pointBorderWidth, e, i) : isNaN(n.borderWidth) || (i = n.borderWidth) : i = o.borderWidth, i
                                    },
                                    getPointRotation: function(t, e) {
                                        var i = this.chart.options.elements.point.rotation,
                                            n = this.getDataset(),
                                            o = t.custom || {};
                                        return isNaN(o.rotation) ? isNaN(n.pointRotation) && !a.isArray(n.pointRotation) || (i = a.valueAtIndexOrDefault(n.pointRotation, e, i)) : i = o.rotation, i
                                    },
                                    updateElement: function(t, e, i) {
                                        var n, o, r = this,
                                            s = r.getMeta(),
                                            l = t.custom || {},
                                            c = r.getDataset(),
                                            u = r.index,
                                            d = c.data[e],
                                            h = r.getScaleForId(s.yAxisID),
                                            p = r.getScaleForId(s.xAxisID),
                                            f = r.chart.options.elements.point;
                                        void 0 !== c.radius && void 0 === c.pointRadius && (c.pointRadius = c.radius), void 0 !== c.hitRadius && void 0 === c.pointHitRadius && (c.pointHitRadius = c.hitRadius), n = p.getPixelForValue("object" == typeof d ? d : NaN, e, u), o = i ? h.getBasePixel() : r.calculatePointY(d, e, u), t._xScale = p, t._yScale = h, t._datasetIndex = u, t._index = e, t._model = {
                                            x: n,
                                            y: o,
                                            skip: l.skip || isNaN(n) || isNaN(o),
                                            radius: l.radius || a.valueAtIndexOrDefault(c.pointRadius, e, f.radius),
                                            pointStyle: l.pointStyle || a.valueAtIndexOrDefault(c.pointStyle, e, f.pointStyle),
                                            rotation: r.getPointRotation(t, e),
                                            backgroundColor: r.getPointBackgroundColor(t, e),
                                            borderColor: r.getPointBorderColor(t, e),
                                            borderWidth: r.getPointBorderWidth(t, e),
                                            tension: s.dataset._model ? s.dataset._model.tension : 0,
                                            steppedLine: !!s.dataset._model && s.dataset._model.steppedLine,
                                            hitRadius: l.hitRadius || a.valueAtIndexOrDefault(c.pointHitRadius, e, f.hitRadius)
                                        }
                                    },
                                    calculatePointY: function(t, e, i) {
                                        var n, o, a, r = this.chart,
                                            s = this.getMeta(),
                                            l = this.getScaleForId(s.yAxisID),
                                            c = 0,
                                            u = 0;
                                        if (l.options.stacked) {
                                            for (n = 0; n < i; n++)
                                                if (o = r.data.datasets[n], "line" === (a = r.getDatasetMeta(n)).type && a.yAxisID === l.id && r.isDatasetVisible(n)) {
                                                    var d = Number(l.getRightValue(o.data[e]));
                                                    d < 0 ? u += d || 0 : c += d || 0
                                                } var h = Number(l.getRightValue(t));
                                            return h < 0 ? l.getPixelForValue(u + h) : l.getPixelForValue(c + h)
                                        }
                                        return l.getPixelForValue(t)
                                    },
                                    updateBezierControlPoints: function() {
                                        var t, e, i, n, o = this.getMeta(),
                                            r = this.chart.chartArea,
                                            s = o.data || [];

                                        function l(t, e, i) {
                                            return Math.max(Math.min(t, i), e)
                                        }
                                        if (o.dataset._model.spanGaps && (s = s.filter(function(t) {
                                                return !t._model.skip
                                            })), "monotone" === o.dataset._model.cubicInterpolationMode) a.splineCurveMonotone(s);
                                        else
                                            for (t = 0, e = s.length; t < e; ++t) i = s[t]._model, n = a.splineCurve(a.previousItem(s, t)._model, i, a.nextItem(s, t)._model, o.dataset._model.tension), i.controlPointPreviousX = n.previous.x, i.controlPointPreviousY = n.previous.y, i.controlPointNextX = n.next.x, i.controlPointNextY = n.next.y;
                                        if (this.chart.options.elements.line.capBezierPoints)
                                            for (t = 0, e = s.length; t < e; ++t)(i = s[t]._model).controlPointPreviousX = l(i.controlPointPreviousX, r.left, r.right), i.controlPointPreviousY = l(i.controlPointPreviousY, r.top, r.bottom), i.controlPointNextX = l(i.controlPointNextX, r.left, r.right), i.controlPointNextY = l(i.controlPointNextY, r.top, r.bottom)
                                    },
                                    draw: function() {
                                        var t, i = this.chart,
                                            n = this.getMeta(),
                                            o = n.data || [],
                                            r = i.chartArea,
                                            s = o.length,
                                            l = 0;
                                        for (e(this.getDataset(), i.options) && (t = (n.dataset._model.borderWidth || 0) / 2, a.canvas.clipArea(i.ctx, {
                                                left: r.left,
                                                right: r.right,
                                                top: r.top - t,
                                                bottom: r.bottom + t
                                            }), n.dataset.draw(), a.canvas.unclipArea(i.ctx)); l < s; ++l) o[l].draw(r)
                                    },
                                    setHoverStyle: function(t) {
                                        var e = this.chart.data.datasets[t._datasetIndex],
                                            i = t._index,
                                            n = t.custom || {},
                                            o = t._model;
                                        t.$previousStyle = {
                                            backgroundColor: o.backgroundColor,
                                            borderColor: o.borderColor,
                                            borderWidth: o.borderWidth,
                                            radius: o.radius
                                        }, o.backgroundColor = n.hoverBackgroundColor || a.valueAtIndexOrDefault(e.pointHoverBackgroundColor, i, a.getHoverColor(o.backgroundColor)), o.borderColor = n.hoverBorderColor || a.valueAtIndexOrDefault(e.pointHoverBorderColor, i, a.getHoverColor(o.borderColor)), o.borderWidth = n.hoverBorderWidth || a.valueAtIndexOrDefault(e.pointHoverBorderWidth, i, o.borderWidth), o.radius = n.hoverRadius || a.valueAtIndexOrDefault(e.pointHoverRadius, i, this.chart.options.elements.point.hoverRadius)
                                    }
                                })
                            }
                        }, {
                            26: 26,
                            41: 41,
                            46: 46
                        }],
                        19: [function(t, e, i) {
                            "use strict";
                            var n = t(26),
                                o = t(41),
                                a = t(46);
                            n._set("polarArea", {
                                scale: {
                                    type: "radialLinear",
                                    angleLines: {
                                        display: !1
                                    },
                                    gridLines: {
                                        circular: !0
                                    },
                                    pointLabels: {
                                        display: !1
                                    },
                                    ticks: {
                                        beginAtZero: !0
                                    }
                                },
                                animation: {
                                    animateRotate: !0,
                                    animateScale: !0
                                },
                                startAngle: -.5 * Math.PI,
                                legendCallback: function(t) {
                                    var e = [];
                                    e.push('<ul class="' + t.id + '-legend">');
                                    var i = t.data,
                                        n = i.datasets,
                                        o = i.labels;
                                    if (n.length)
                                        for (var a = 0; a < n[0].data.length; ++a) e.push('<li><span style="background-color:' + n[0].backgroundColor[a] + '"></span>'), o[a] && e.push(o[a]), e.push("</li>");
                                    return e.push("</ul>"), e.join("")
                                },
                                legend: {
                                    labels: {
                                        generateLabels: function(t) {
                                            var e = t.data;
                                            return e.labels.length && e.datasets.length ? e.labels.map(function(i, n) {
                                                var o = t.getDatasetMeta(0),
                                                    r = e.datasets[0],
                                                    s = o.data[n].custom || {},
                                                    l = a.valueAtIndexOrDefault,
                                                    c = t.options.elements.arc;
                                                return {
                                                    text: i,
                                                    fillStyle: s.backgroundColor ? s.backgroundColor : l(r.backgroundColor, n, c.backgroundColor),
                                                    strokeStyle: s.borderColor ? s.borderColor : l(r.borderColor, n, c.borderColor),
                                                    lineWidth: s.borderWidth ? s.borderWidth : l(r.borderWidth, n, c.borderWidth),
                                                    hidden: isNaN(r.data[n]) || o.data[n].hidden,
                                                    index: n
                                                }
                                            }) : []
                                        }
                                    },
                                    onClick: function(t, e) {
                                        var i, n, o, a = e.index,
                                            r = this.chart;
                                        for (i = 0, n = (r.data.datasets || []).length; i < n; ++i)(o = r.getDatasetMeta(i)).data[a].hidden = !o.data[a].hidden;
                                        r.update()
                                    }
                                },
                                tooltips: {
                                    callbacks: {
                                        title: function() {
                                            return ""
                                        },
                                        label: function(t, e) {
                                            return e.labels[t.index] + ": " + t.yLabel
                                        }
                                    }
                                }
                            }), e.exports = function(t) {
                                t.controllers.polarArea = t.DatasetController.extend({
                                    dataElementType: o.Arc,
                                    linkScales: a.noop,
                                    update: function(t) {
                                        var e, i, n, o = this,
                                            r = o.getDataset(),
                                            s = o.getMeta(),
                                            l = o.chart.options.startAngle || 0,
                                            c = o._starts = [],
                                            u = o._angles = [];
                                        for (o._updateRadius(), s.count = o.countVisibleElements(), e = 0, i = r.data.length; e < i; e++) c[e] = l, n = o._computeAngle(e), u[e] = n, l += n;
                                        a.each(s.data, function(e, i) {
                                            o.updateElement(e, i, t)
                                        })
                                    },
                                    _updateRadius: function() {
                                        var t = this,
                                            e = t.chart,
                                            i = e.chartArea,
                                            n = e.options,
                                            o = n.elements.arc,
                                            a = Math.min(i.right - i.left, i.bottom - i.top);
                                        e.outerRadius = Math.max((a - o.borderWidth / 2) / 2, 0), e.innerRadius = Math.max(n.cutoutPercentage ? e.outerRadius / 100 * n.cutoutPercentage : 1, 0), e.radiusLength = (e.outerRadius - e.innerRadius) / e.getVisibleDatasetCount(), t.outerRadius = e.outerRadius - e.radiusLength * t.index, t.innerRadius = t.outerRadius - e.radiusLength
                                    },
                                    updateElement: function(t, e, i) {
                                        var n = this,
                                            o = n.chart,
                                            r = n.getDataset(),
                                            s = o.options,
                                            l = s.animation,
                                            c = o.scale,
                                            u = o.data.labels,
                                            d = c.xCenter,
                                            h = c.yCenter,
                                            p = s.startAngle,
                                            f = t.hidden ? 0 : c.getDistanceFromCenterForValue(r.data[e]),
                                            m = n._starts[e],
                                            g = m + (t.hidden ? 0 : n._angles[e]),
                                            v = l.animateScale ? 0 : c.getDistanceFromCenterForValue(r.data[e]);
                                        a.extend(t, {
                                            _datasetIndex: n.index,
                                            _index: e,
                                            _scale: c,
                                            _model: {
                                                x: d,
                                                y: h,
                                                innerRadius: 0,
                                                outerRadius: i ? v : f,
                                                startAngle: i && l.animateRotate ? p : m,
                                                endAngle: i && l.animateRotate ? p : g,
                                                label: a.valueAtIndexOrDefault(u, e, u[e])
                                            }
                                        });
                                        var y = this.chart.options.elements.arc,
                                            b = t.custom || {},
                                            x = a.valueAtIndexOrDefault,
                                            w = t._model;
                                        w.backgroundColor = b.backgroundColor ? b.backgroundColor : x(r.backgroundColor, e, y.backgroundColor), w.borderColor = b.borderColor ? b.borderColor : x(r.borderColor, e, y.borderColor), w.borderWidth = b.borderWidth ? b.borderWidth : x(r.borderWidth, e, y.borderWidth), t.pivot()
                                    },
                                    countVisibleElements: function() {
                                        var t = this.getDataset(),
                                            e = this.getMeta(),
                                            i = 0;
                                        return a.each(e.data, function(e, n) {
                                            isNaN(t.data[n]) || e.hidden || i++
                                        }), i
                                    },
                                    _computeAngle: function(t) {
                                        var e = this,
                                            i = this.getMeta().count,
                                            n = e.getDataset(),
                                            o = e.getMeta();
                                        if (isNaN(n.data[t]) || o.data[t].hidden) return 0;
                                        var r = {
                                            chart: e.chart,
                                            dataIndex: t,
                                            dataset: n,
                                            datasetIndex: e.index
                                        };
                                        return a.options.resolve([e.chart.options.elements.arc.angle, 2 * Math.PI / i], r, t)
                                    }
                                })
                            }
                        }, {
                            26: 26,
                            41: 41,
                            46: 46
                        }],
                        20: [function(t, e, i) {
                            "use strict";
                            var n = t(26),
                                o = t(41),
                                a = t(46);
                            n._set("radar", {
                                scale: {
                                    type: "radialLinear"
                                },
                                elements: {
                                    line: {
                                        tension: 0
                                    }
                                }
                            }), e.exports = function(t) {
                                t.controllers.radar = t.DatasetController.extend({
                                    datasetElementType: o.Line,
                                    dataElementType: o.Point,
                                    linkScales: a.noop,
                                    update: function(t) {
                                        var e = this,
                                            i = e.getMeta(),
                                            n = i.dataset,
                                            o = i.data,
                                            r = n.custom || {},
                                            s = e.getDataset(),
                                            l = e.chart.options.elements.line,
                                            c = e.chart.scale;
                                        void 0 !== s.tension && void 0 === s.lineTension && (s.lineTension = s.tension), a.extend(i.dataset, {
                                            _datasetIndex: e.index,
                                            _scale: c,
                                            _children: o,
                                            _loop: !0,
                                            _model: {
                                                tension: r.tension ? r.tension : a.valueOrDefault(s.lineTension, l.tension),
                                                backgroundColor: r.backgroundColor ? r.backgroundColor : s.backgroundColor || l.backgroundColor,
                                                borderWidth: r.borderWidth ? r.borderWidth : s.borderWidth || l.borderWidth,
                                                borderColor: r.borderColor ? r.borderColor : s.borderColor || l.borderColor,
                                                fill: r.fill ? r.fill : void 0 !== s.fill ? s.fill : l.fill,
                                                borderCapStyle: r.borderCapStyle ? r.borderCapStyle : s.borderCapStyle || l.borderCapStyle,
                                                borderDash: r.borderDash ? r.borderDash : s.borderDash || l.borderDash,
                                                borderDashOffset: r.borderDashOffset ? r.borderDashOffset : s.borderDashOffset || l.borderDashOffset,
                                                borderJoinStyle: r.borderJoinStyle ? r.borderJoinStyle : s.borderJoinStyle || l.borderJoinStyle
                                            }
                                        }), i.dataset.pivot(), a.each(o, function(i, n) {
                                            e.updateElement(i, n, t)
                                        }, e), e.updateBezierControlPoints()
                                    },
                                    updateElement: function(t, e, i) {
                                        var n = this,
                                            o = t.custom || {},
                                            r = n.getDataset(),
                                            s = n.chart.scale,
                                            l = n.chart.options.elements.point,
                                            c = s.getPointPositionForValue(e, r.data[e]);
                                        void 0 !== r.radius && void 0 === r.pointRadius && (r.pointRadius = r.radius), void 0 !== r.hitRadius && void 0 === r.pointHitRadius && (r.pointHitRadius = r.hitRadius), a.extend(t, {
                                            _datasetIndex: n.index,
                                            _index: e,
                                            _scale: s,
                                            _model: {
                                                x: i ? s.xCenter : c.x,
                                                y: i ? s.yCenter : c.y,
                                                tension: o.tension ? o.tension : a.valueOrDefault(r.lineTension, n.chart.options.elements.line.tension),
                                                radius: o.radius ? o.radius : a.valueAtIndexOrDefault(r.pointRadius, e, l.radius),
                                                backgroundColor: o.backgroundColor ? o.backgroundColor : a.valueAtIndexOrDefault(r.pointBackgroundColor, e, l.backgroundColor),
                                                borderColor: o.borderColor ? o.borderColor : a.valueAtIndexOrDefault(r.pointBorderColor, e, l.borderColor),
                                                borderWidth: o.borderWidth ? o.borderWidth : a.valueAtIndexOrDefault(r.pointBorderWidth, e, l.borderWidth),
                                                pointStyle: o.pointStyle ? o.pointStyle : a.valueAtIndexOrDefault(r.pointStyle, e, l.pointStyle),
                                                rotation: o.rotation ? o.rotation : a.valueAtIndexOrDefault(r.pointRotation, e, l.rotation),
                                                hitRadius: o.hitRadius ? o.hitRadius : a.valueAtIndexOrDefault(r.pointHitRadius, e, l.hitRadius)
                                            }
                                        }), t._model.skip = o.skip ? o.skip : isNaN(t._model.x) || isNaN(t._model.y)
                                    },
                                    updateBezierControlPoints: function() {
                                        var t = this.chart.chartArea,
                                            e = this.getMeta();
                                        a.each(e.data, function(i, n) {
                                            var o = i._model,
                                                r = a.splineCurve(a.previousItem(e.data, n, !0)._model, o, a.nextItem(e.data, n, !0)._model, o.tension);
                                            o.controlPointPreviousX = Math.max(Math.min(r.previous.x, t.right), t.left), o.controlPointPreviousY = Math.max(Math.min(r.previous.y, t.bottom), t.top), o.controlPointNextX = Math.max(Math.min(r.next.x, t.right), t.left), o.controlPointNextY = Math.max(Math.min(r.next.y, t.bottom), t.top), i.pivot()
                                        })
                                    },
                                    setHoverStyle: function(t) {
                                        var e = this.chart.data.datasets[t._datasetIndex],
                                            i = t.custom || {},
                                            n = t._index,
                                            o = t._model;
                                        t.$previousStyle = {
                                            backgroundColor: o.backgroundColor,
                                            borderColor: o.borderColor,
                                            borderWidth: o.borderWidth,
                                            radius: o.radius
                                        }, o.radius = i.hoverRadius ? i.hoverRadius : a.valueAtIndexOrDefault(e.pointHoverRadius, n, this.chart.options.elements.point.hoverRadius), o.backgroundColor = i.hoverBackgroundColor ? i.hoverBackgroundColor : a.valueAtIndexOrDefault(e.pointHoverBackgroundColor, n, a.getHoverColor(o.backgroundColor)), o.borderColor = i.hoverBorderColor ? i.hoverBorderColor : a.valueAtIndexOrDefault(e.pointHoverBorderColor, n, a.getHoverColor(o.borderColor)), o.borderWidth = i.hoverBorderWidth ? i.hoverBorderWidth : a.valueAtIndexOrDefault(e.pointHoverBorderWidth, n, o.borderWidth)
                                    }
                                })
                            }
                        }, {
                            26: 26,
                            41: 41,
                            46: 46
                        }],
                        21: [function(t, e, i) {
                            "use strict";
                            t(26)._set("scatter", {
                                hover: {
                                    mode: "single"
                                },
                                scales: {
                                    xAxes: [{
                                        id: "x-axis-1",
                                        type: "linear",
                                        position: "bottom"
                                    }],
                                    yAxes: [{
                                        id: "y-axis-1",
                                        type: "linear",
                                        position: "left"
                                    }]
                                },
                                showLines: !1,
                                tooltips: {
                                    callbacks: {
                                        title: function() {
                                            return ""
                                        },
                                        label: function(t) {
                                            return "(" + t.xLabel + ", " + t.yLabel + ")"
                                        }
                                    }
                                }
                            }), e.exports = function(t) {
                                t.controllers.scatter = t.controllers.line
                            }
                        }, {
                            26: 26
                        }],
                        22: [function(t, e, i) {
                            "use strict";
                            var n = t(27);
                            i = e.exports = n.extend({
                                chart: null,
                                currentStep: 0,
                                numSteps: 60,
                                easing: "",
                                render: null,
                                onAnimationProgress: null,
                                onAnimationComplete: null
                            });
                            Object.defineProperty(i.prototype, "animationObject", {
                                get: function() {
                                    return this
                                }
                            }), Object.defineProperty(i.prototype, "chartInstance", {
                                get: function() {
                                    return this.chart
                                },
                                set: function(t) {
                                    this.chart = t
                                }
                            })
                        }, {
                            27: 27
                        }],
                        23: [function(t, e, i) {
                            "use strict";
                            var n = t(26),
                                o = t(46);
                            n._set("global", {
                                animation: {
                                    duration: 1e3,
                                    easing: "easeOutQuart",
                                    onProgress: o.noop,
                                    onComplete: o.noop
                                }
                            }), e.exports = {
                                frameDuration: 17,
                                animations: [],
                                dropFrames: 0,
                                request: null,
                                addAnimation: function(t, e, i, n) {
                                    var o, a, r = this.animations;
                                    for (e.chart = t, n || (t.animating = !0), o = 0, a = r.length; o < a; ++o)
                                        if (r[o].chart === t) return void(r[o] = e);
                                    r.push(e), 1 === r.length && this.requestAnimationFrame()
                                },
                                cancelAnimation: function(t) {
                                    var e = o.findIndex(this.animations, function(e) {
                                        return e.chart === t
                                    }); - 1 !== e && (this.animations.splice(e, 1), t.animating = !1)
                                },
                                requestAnimationFrame: function() {
                                    var t = this;
                                    null === t.request && (t.request = o.requestAnimFrame.call(window, function() {
                                        t.request = null, t.startDigest()
                                    }))
                                },
                                startDigest: function() {
                                    var t = this,
                                        e = Date.now(),
                                        i = 0;
                                    t.dropFrames > 1 && (i = Math.floor(t.dropFrames), t.dropFrames = t.dropFrames % 1), t.advance(1 + i);
                                    var n = Date.now();
                                    t.dropFrames += (n - e) / t.frameDuration, t.animations.length > 0 && t.requestAnimationFrame()
                                },
                                advance: function(t) {
                                    for (var e, i, n = this.animations, a = 0; a < n.length;) i = (e = n[a]).chart, e.currentStep = (e.currentStep || 0) + t, e.currentStep = Math.min(e.currentStep, e.numSteps), o.callback(e.render, [i, e], i), o.callback(e.onAnimationProgress, [e], i), e.currentStep >= e.numSteps ? (o.callback(e.onAnimationComplete, [e], i), i.animating = !1, n.splice(a, 1)) : ++a
                                }
                            }
                        }, {
                            26: 26,
                            46: 46
                        }],
                        24: [function(t, e, i) {
                            "use strict";
                            var n = t(22),
                                o = t(23),
                                a = t(26),
                                r = t(46),
                                s = t(29),
                                l = t(31),
                                c = t(49),
                                u = t(32),
                                d = t(34),
                                h = t(36);
                            e.exports = function(t) {
                                function e(t) {
                                    return "top" === t || "bottom" === t
                                }
                                t.types = {}, t.instances = {}, t.controllers = {}, r.extend(t.prototype, {
                                    construct: function(e, i) {
                                        var n = this;
                                        i = function(t) {
                                            var e = (t = t || {}).data = t.data || {};
                                            return e.datasets = e.datasets || [], e.labels = e.labels || [], t.options = r.configMerge(a.global, a[t.type], t.options || {}), t
                                        }(i);
                                        var o = c.acquireContext(e, i),
                                            s = o && o.canvas,
                                            l = s && s.height,
                                            u = s && s.width;
                                        n.id = r.uid(), n.ctx = o, n.canvas = s, n.config = i, n.width = u, n.height = l, n.aspectRatio = l ? u / l : null, n.options = i.options, n._bufferedRender = !1, n.chart = n, n.controller = n, t.instances[n.id] = n, Object.defineProperty(n, "data", {
                                            get: function() {
                                                return n.config.data
                                            },
                                            set: function(t) {
                                                n.config.data = t
                                            }
                                        }), o && s ? (n.initialize(), n.update()) : console.error("Failed to create chart: can't acquire context from the given item")
                                    },
                                    initialize: function() {
                                        var t = this;
                                        return u.notify(t, "beforeInit"), r.retinaScale(t, t.options.devicePixelRatio), t.bindEvents(), t.options.responsive && t.resize(!0), t.ensureScalesHaveIDs(), t.buildOrUpdateScales(), t.initToolTip(), u.notify(t, "afterInit"), t
                                    },
                                    clear: function() {
                                        return r.canvas.clear(this), this
                                    },
                                    stop: function() {
                                        return o.cancelAnimation(this), this
                                    },
                                    resize: function(t) {
                                        var e = this,
                                            i = e.options,
                                            n = e.canvas,
                                            o = i.maintainAspectRatio && e.aspectRatio || null,
                                            a = Math.max(0, Math.floor(r.getMaximumWidth(n))),
                                            s = Math.max(0, Math.floor(o ? a / o : r.getMaximumHeight(n)));
                                        if ((e.width !== a || e.height !== s) && (n.width = e.width = a, n.height = e.height = s, n.style.width = a + "px", n.style.height = s + "px", r.retinaScale(e, i.devicePixelRatio), !t)) {
                                            var l = {
                                                width: a,
                                                height: s
                                            };
                                            u.notify(e, "resize", [l]), e.options.onResize && e.options.onResize(e, l), e.stop(), e.update({
                                                duration: e.options.responsiveAnimationDuration
                                            })
                                        }
                                    },
                                    ensureScalesHaveIDs: function() {
                                        var t = this.options,
                                            e = t.scales || {},
                                            i = t.scale;
                                        r.each(e.xAxes, function(t, e) {
                                            t.id = t.id || "x-axis-" + e
                                        }), r.each(e.yAxes, function(t, e) {
                                            t.id = t.id || "y-axis-" + e
                                        }), i && (i.id = i.id || "scale")
                                    },
                                    buildOrUpdateScales: function() {
                                        var t = this,
                                            i = t.options,
                                            n = t.scales || {},
                                            o = [],
                                            a = Object.keys(n).reduce(function(t, e) {
                                                return t[e] = !1, t
                                            }, {});
                                        i.scales && (o = o.concat((i.scales.xAxes || []).map(function(t) {
                                            return {
                                                options: t,
                                                dtype: "category",
                                                dposition: "bottom"
                                            }
                                        }), (i.scales.yAxes || []).map(function(t) {
                                            return {
                                                options: t,
                                                dtype: "linear",
                                                dposition: "left"
                                            }
                                        }))), i.scale && o.push({
                                            options: i.scale,
                                            dtype: "radialLinear",
                                            isDefault: !0,
                                            dposition: "chartArea"
                                        }), r.each(o, function(i) {
                                            var o = i.options,
                                                s = o.id,
                                                l = r.valueOrDefault(o.type, i.dtype);
                                            e(o.position) !== e(i.dposition) && (o.position = i.dposition), a[s] = !0;
                                            var c = null;
                                            if (s in n && n[s].type === l)(c = n[s]).options = o, c.ctx = t.ctx, c.chart = t;
                                            else {
                                                var u = d.getScaleConstructor(l);
                                                if (!u) return;
                                                c = new u({
                                                    id: s,
                                                    type: l,
                                                    options: o,
                                                    ctx: t.ctx,
                                                    chart: t
                                                }), n[c.id] = c
                                            }
                                            c.mergeTicksOptions(), i.isDefault && (t.scale = c)
                                        }), r.each(a, function(t, e) {
                                            t || delete n[e]
                                        }), t.scales = n, d.addScalesToLayout(this)
                                    },
                                    buildOrUpdateControllers: function() {
                                        var e = this,
                                            i = [],
                                            n = [];
                                        return r.each(e.data.datasets, function(o, a) {
                                            var r = e.getDatasetMeta(a),
                                                s = o.type || e.config.type;
                                            if (r.type && r.type !== s && (e.destroyDatasetMeta(a), r = e.getDatasetMeta(a)), r.type = s, i.push(r.type), r.controller) r.controller.updateIndex(a), r.controller.linkScales();
                                            else {
                                                var l = t.controllers[r.type];
                                                if (void 0 === l) throw new Error('"' + r.type + '" is not a chart type.');
                                                r.controller = new l(e, a), n.push(r.controller)
                                            }
                                        }, e), n
                                    },
                                    resetElements: function() {
                                        var t = this;
                                        r.each(t.data.datasets, function(e, i) {
                                            t.getDatasetMeta(i).controller.reset()
                                        }, t)
                                    },
                                    reset: function() {
                                        this.resetElements(), this.tooltip.initialize()
                                    },
                                    update: function(e) {
                                        var i, n, o = this;
                                        if (e && "object" == typeof e || (e = {
                                                duration: e,
                                                lazy: arguments[1]
                                            }), n = (i = o).options, r.each(i.scales, function(t) {
                                                l.removeBox(i, t)
                                            }), n = r.configMerge(t.defaults.global, t.defaults[i.config.type], n), i.options = i.config.options = n, i.ensureScalesHaveIDs(), i.buildOrUpdateScales(), i.tooltip._options = n.tooltips, i.tooltip.initialize(), u._invalidate(o), !1 !== u.notify(o, "beforeUpdate")) {
                                            o.tooltip._data = o.data;
                                            var a = o.buildOrUpdateControllers();
                                            r.each(o.data.datasets, function(t, e) {
                                                o.getDatasetMeta(e).controller.buildOrUpdateElements()
                                            }, o), o.updateLayout(), o.options.animation && o.options.animation.duration && r.each(a, function(t) {
                                                t.reset()
                                            }), o.updateDatasets(), o.tooltip.initialize(), o.lastActive = [], u.notify(o, "afterUpdate"), o._bufferedRender ? o._bufferedRequest = {
                                                duration: e.duration,
                                                easing: e.easing,
                                                lazy: e.lazy
                                            } : o.render(e)
                                        }
                                    },
                                    updateLayout: function() {
                                        !1 !== u.notify(this, "beforeLayout") && (l.update(this, this.width, this.height), u.notify(this, "afterScaleUpdate"), u.notify(this, "afterLayout"))
                                    },
                                    updateDatasets: function() {
                                        if (!1 !== u.notify(this, "beforeDatasetsUpdate")) {
                                            for (var t = 0, e = this.data.datasets.length; t < e; ++t) this.updateDataset(t);
                                            u.notify(this, "afterDatasetsUpdate")
                                        }
                                    },
                                    updateDataset: function(t) {
                                        var e = this.getDatasetMeta(t),
                                            i = {
                                                meta: e,
                                                index: t
                                            };
                                        !1 !== u.notify(this, "beforeDatasetUpdate", [i]) && (e.controller.update(), u.notify(this, "afterDatasetUpdate", [i]))
                                    },
                                    render: function(t) {
                                        var e = this;
                                        t && "object" == typeof t || (t = {
                                            duration: t,
                                            lazy: arguments[1]
                                        });
                                        var i = t.duration,
                                            a = t.lazy;
                                        if (!1 !== u.notify(e, "beforeRender")) {
                                            var s = e.options.animation,
                                                l = function(t) {
                                                    u.notify(e, "afterRender"), r.callback(s && s.onComplete, [t], e)
                                                };
                                            if (s && (void 0 !== i && 0 !== i || void 0 === i && 0 !== s.duration)) {
                                                var c = new n({
                                                    numSteps: (i || s.duration) / 16.66,
                                                    easing: t.easing || s.easing,
                                                    render: function(t, e) {
                                                        var i = r.easing.effects[e.easing],
                                                            n = e.currentStep,
                                                            o = n / e.numSteps;
                                                        t.draw(i(o), o, n)
                                                    },
                                                    onAnimationProgress: s.onProgress,
                                                    onAnimationComplete: l
                                                });
                                                o.addAnimation(e, c, i, a)
                                            } else e.draw(), l(new n({
                                                numSteps: 0,
                                                chart: e
                                            }));
                                            return e
                                        }
                                    },
                                    draw: function(t) {
                                        var e = this;
                                        e.clear(), r.isNullOrUndef(t) && (t = 1), e.transition(t), e.width <= 0 || e.height <= 0 || !1 !== u.notify(e, "beforeDraw", [t]) && (r.each(e.boxes, function(t) {
                                            t.draw(e.chartArea)
                                        }, e), e.scale && e.scale.draw(), e.drawDatasets(t), e._drawTooltip(t), u.notify(e, "afterDraw", [t]))
                                    },
                                    transition: function(t) {
                                        for (var e = 0, i = (this.data.datasets || []).length; e < i; ++e) this.isDatasetVisible(e) && this.getDatasetMeta(e).controller.transition(t);
                                        this.tooltip.transition(t)
                                    },
                                    drawDatasets: function(t) {
                                        var e = this;
                                        if (!1 !== u.notify(e, "beforeDatasetsDraw", [t])) {
                                            for (var i = (e.data.datasets || []).length - 1; i >= 0; --i) e.isDatasetVisible(i) && e.drawDataset(i, t);
                                            u.notify(e, "afterDatasetsDraw", [t])
                                        }
                                    },
                                    drawDataset: function(t, e) {
                                        var i = this.getDatasetMeta(t),
                                            n = {
                                                meta: i,
                                                index: t,
                                                easingValue: e
                                            };
                                        !1 !== u.notify(this, "beforeDatasetDraw", [n]) && (i.controller.draw(e), u.notify(this, "afterDatasetDraw", [n]))
                                    },
                                    _drawTooltip: function(t) {
                                        var e = this.tooltip,
                                            i = {
                                                tooltip: e,
                                                easingValue: t
                                            };
                                        !1 !== u.notify(this, "beforeTooltipDraw", [i]) && (e.draw(), u.notify(this, "afterTooltipDraw", [i]))
                                    },
                                    getElementAtEvent: function(t) {
                                        return s.modes.single(this, t)
                                    },
                                    getElementsAtEvent: function(t) {
                                        return s.modes.label(this, t, {
                                            intersect: !0
                                        })
                                    },
                                    getElementsAtXAxis: function(t) {
                                        return s.modes["x-axis"](this, t, {
                                            intersect: !0
                                        })
                                    },
                                    getElementsAtEventForMode: function(t, e, i) {
                                        var n = s.modes[e];
                                        return "function" == typeof n ? n(this, t, i) : []
                                    },
                                    getDatasetAtEvent: function(t) {
                                        return s.modes.dataset(this, t, {
                                            intersect: !0
                                        })
                                    },
                                    getDatasetMeta: function(t) {
                                        var e = this.data.datasets[t];
                                        e._meta || (e._meta = {});
                                        var i = e._meta[this.id];
                                        return i || (i = e._meta[this.id] = {
                                            type: null,
                                            data: [],
                                            dataset: null,
                                            controller: null,
                                            hidden: null,
                                            xAxisID: null,
                                            yAxisID: null
                                        }), i
                                    },
                                    getVisibleDatasetCount: function() {
                                        for (var t = 0, e = 0, i = this.data.datasets.length; e < i; ++e) this.isDatasetVisible(e) && t++;
                                        return t
                                    },
                                    isDatasetVisible: function(t) {
                                        var e = this.getDatasetMeta(t);
                                        return "boolean" == typeof e.hidden ? !e.hidden : !this.data.datasets[t].hidden
                                    },
                                    generateLegend: function() {
                                        return this.options.legendCallback(this)
                                    },
                                    destroyDatasetMeta: function(t) {
                                        var e = this.id,
                                            i = this.data.datasets[t],
                                            n = i._meta && i._meta[e];
                                        n && (n.controller.destroy(), delete i._meta[e])
                                    },
                                    destroy: function() {
                                        var e, i, n = this,
                                            o = n.canvas;
                                        for (n.stop(), e = 0, i = n.data.datasets.length; e < i; ++e) n.destroyDatasetMeta(e);
                                        o && (n.unbindEvents(), r.canvas.clear(n), c.releaseContext(n.ctx), n.canvas = null, n.ctx = null), u.notify(n, "destroy"), delete t.instances[n.id]
                                    },
                                    toBase64Image: function() {
                                        return this.canvas.toDataURL.apply(this.canvas, arguments)
                                    },
                                    initToolTip: function() {
                                        var t = this;
                                        t.tooltip = new h({
                                            _chart: t,
                                            _chartInstance: t,
                                            _data: t.data,
                                            _options: t.options.tooltips
                                        }, t)
                                    },
                                    bindEvents: function() {
                                        var t = this,
                                            e = t._listeners = {},
                                            i = function() {
                                                t.eventHandler.apply(t, arguments)
                                            };
                                        r.each(t.options.events, function(n) {
                                            c.addEventListener(t, n, i), e[n] = i
                                        }), t.options.responsive && (i = function() {
                                            t.resize()
                                        }, c.addEventListener(t, "resize", i), e.resize = i)
                                    },
                                    unbindEvents: function() {
                                        var t = this,
                                            e = t._listeners;
                                        e && (delete t._listeners, r.each(e, function(e, i) {
                                            c.removeEventListener(t, i, e)
                                        }))
                                    },
                                    updateHoverStyle: function(t, e, i) {
                                        var n, o, a, r = i ? "setHoverStyle" : "removeHoverStyle";
                                        for (o = 0, a = t.length; o < a; ++o)(n = t[o]) && this.getDatasetMeta(n._datasetIndex).controller[r](n)
                                    },
                                    eventHandler: function(t) {
                                        var e = this,
                                            i = e.tooltip;
                                        if (!1 !== u.notify(e, "beforeEvent", [t])) {
                                            e._bufferedRender = !0, e._bufferedRequest = null;
                                            var n = e.handleEvent(t);
                                            i && (n = i._start ? i.handleEvent(t) : n | i.handleEvent(t)), u.notify(e, "afterEvent", [t]);
                                            var o = e._bufferedRequest;
                                            return o ? e.render(o) : n && !e.animating && (e.stop(), e.render({
                                                duration: e.options.hover.animationDuration,
                                                lazy: !0
                                            })), e._bufferedRender = !1, e._bufferedRequest = null, e
                                        }
                                    },
                                    handleEvent: function(t) {
                                        var e, i = this,
                                            n = i.options || {},
                                            o = n.hover;
                                        return i.lastActive = i.lastActive || [], "mouseout" === t.type ? i.active = [] : i.active = i.getElementsAtEventForMode(t, o.mode, o), r.callback(n.onHover || n.hover.onHover, [t.native, i.active], i), "mouseup" !== t.type && "click" !== t.type || n.onClick && n.onClick.call(i, t.native, i.active), i.lastActive.length && i.updateHoverStyle(i.lastActive, o.mode, !1), i.active.length && o.mode && i.updateHoverStyle(i.active, o.mode, !0), e = !r.arrayEquals(i.active, i.lastActive), i.lastActive = i.active, e
                                    }
                                }), t.Controller = t
                            }
                        }, {
                            22: 22,
                            23: 23,
                            26: 26,
                            29: 29,
                            31: 31,
                            32: 32,
                            34: 34,
                            36: 36,
                            46: 46,
                            49: 49
                        }],
                        25: [function(t, e, i) {
                            "use strict";
                            var n = t(46);
                            e.exports = function(t) {
                                var e = ["push", "pop", "shift", "splice", "unshift"];

                                function i(t, i) {
                                    var n = t._chartjs;
                                    if (n) {
                                        var o = n.listeners,
                                            a = o.indexOf(i); - 1 !== a && o.splice(a, 1), o.length > 0 || (e.forEach(function(e) {
                                            delete t[e]
                                        }), delete t._chartjs)
                                    }
                                }
                                t.DatasetController = function(t, e) {
                                    this.initialize(t, e)
                                }, n.extend(t.DatasetController.prototype, {
                                    datasetElementType: null,
                                    dataElementType: null,
                                    initialize: function(t, e) {
                                        this.chart = t, this.index = e, this.linkScales(), this.addElements()
                                    },
                                    updateIndex: function(t) {
                                        this.index = t
                                    },
                                    linkScales: function() {
                                        var t = this,
                                            e = t.getMeta(),
                                            i = t.getDataset();
                                        null !== e.xAxisID && e.xAxisID in t.chart.scales || (e.xAxisID = i.xAxisID || t.chart.options.scales.xAxes[0].id), null !== e.yAxisID && e.yAxisID in t.chart.scales || (e.yAxisID = i.yAxisID || t.chart.options.scales.yAxes[0].id)
                                    },
                                    getDataset: function() {
                                        return this.chart.data.datasets[this.index]
                                    },
                                    getMeta: function() {
                                        return this.chart.getDatasetMeta(this.index)
                                    },
                                    getScaleForId: function(t) {
                                        return this.chart.scales[t]
                                    },
                                    reset: function() {
                                        this.update(!0)
                                    },
                                    destroy: function() {
                                        this._data && i(this._data, this)
                                    },
                                    createMetaDataset: function() {
                                        var t = this.datasetElementType;
                                        return t && new t({
                                            _chart: this.chart,
                                            _datasetIndex: this.index
                                        })
                                    },
                                    createMetaData: function(t) {
                                        var e = this.dataElementType;
                                        return e && new e({
                                            _chart: this.chart,
                                            _datasetIndex: this.index,
                                            _index: t
                                        })
                                    },
                                    addElements: function() {
                                        var t, e, i = this.getMeta(),
                                            n = this.getDataset().data || [],
                                            o = i.data;
                                        for (t = 0, e = n.length; t < e; ++t) o[t] = o[t] || this.createMetaData(t);
                                        i.dataset = i.dataset || this.createMetaDataset()
                                    },
                                    addElementAndReset: function(t) {
                                        var e = this.createMetaData(t);
                                        this.getMeta().data.splice(t, 0, e), this.updateElement(e, t, !0)
                                    },
                                    buildOrUpdateElements: function() {
                                        var t, o, a = this,
                                            r = a.getDataset(),
                                            s = r.data || (r.data = []);
                                        a._data !== s && (a._data && i(a._data, a), o = a, (t = s)._chartjs ? t._chartjs.listeners.push(o) : (Object.defineProperty(t, "_chartjs", {
                                            configurable: !0,
                                            enumerable: !1,
                                            value: {
                                                listeners: [o]
                                            }
                                        }), e.forEach(function(e) {
                                            var i = "onData" + e.charAt(0).toUpperCase() + e.slice(1),
                                                o = t[e];
                                            Object.defineProperty(t, e, {
                                                configurable: !0,
                                                enumerable: !1,
                                                value: function() {
                                                    var e = Array.prototype.slice.call(arguments),
                                                        a = o.apply(this, e);
                                                    return n.each(t._chartjs.listeners, function(t) {
                                                        "function" == typeof t[i] && t[i].apply(t, e)
                                                    }), a
                                                }
                                            })
                                        })), a._data = s), a.resyncElements()
                                    },
                                    update: n.noop,
                                    transition: function(t) {
                                        for (var e = this.getMeta(), i = e.data || [], n = i.length, o = 0; o < n; ++o) i[o].transition(t);
                                        e.dataset && e.dataset.transition(t)
                                    },
                                    draw: function() {
                                        var t = this.getMeta(),
                                            e = t.data || [],
                                            i = e.length,
                                            n = 0;
                                        for (t.dataset && t.dataset.draw(); n < i; ++n) e[n].draw()
                                    },
                                    removeHoverStyle: function(t) {
                                        n.merge(t._model, t.$previousStyle || {}), delete t.$previousStyle
                                    },
                                    setHoverStyle: function(t) {
                                        var e = this.chart.data.datasets[t._datasetIndex],
                                            i = t._index,
                                            o = t.custom || {},
                                            a = n.valueAtIndexOrDefault,
                                            r = n.getHoverColor,
                                            s = t._model;
                                        t.$previousStyle = {
                                            backgroundColor: s.backgroundColor,
                                            borderColor: s.borderColor,
                                            borderWidth: s.borderWidth
                                        }, s.backgroundColor = o.hoverBackgroundColor ? o.hoverBackgroundColor : a(e.hoverBackgroundColor, i, r(s.backgroundColor)), s.borderColor = o.hoverBorderColor ? o.hoverBorderColor : a(e.hoverBorderColor, i, r(s.borderColor)), s.borderWidth = o.hoverBorderWidth ? o.hoverBorderWidth : a(e.hoverBorderWidth, i, s.borderWidth)
                                    },
                                    resyncElements: function() {
                                        var t = this.getMeta(),
                                            e = this.getDataset().data,
                                            i = t.data.length,
                                            n = e.length;
                                        n < i ? t.data.splice(n, i - n) : n > i && this.insertElements(i, n - i)
                                    },
                                    insertElements: function(t, e) {
                                        for (var i = 0; i < e; ++i) this.addElementAndReset(t + i)
                                    },
                                    onDataPush: function() {
                                        this.insertElements(this.getDataset().data.length - 1, arguments.length)
                                    },
                                    onDataPop: function() {
                                        this.getMeta().data.pop()
                                    },
                                    onDataShift: function() {
                                        this.getMeta().data.shift()
                                    },
                                    onDataSplice: function(t, e) {
                                        this.getMeta().data.splice(t, e), this.insertElements(t, arguments.length - 2)
                                    },
                                    onDataUnshift: function() {
                                        this.insertElements(0, arguments.length)
                                    }
                                }), t.DatasetController.extend = n.inherits
                            }
                        }, {
                            46: 46
                        }],
                        26: [function(t, e, i) {
                            "use strict";
                            var n = t(46);
                            e.exports = {
                                _set: function(t, e) {
                                    return n.merge(this[t] || (this[t] = {}), e)
                                }
                            }
                        }, {
                            46: 46
                        }],
                        27: [function(t, e, i) {
                            "use strict";
                            var n = t(3),
                                o = t(46);
                            var a = function(t) {
                                o.extend(this, t), this.initialize.apply(this, arguments)
                            };
                            o.extend(a.prototype, {
                                initialize: function() {
                                    this.hidden = !1
                                },
                                pivot: function() {
                                    var t = this;
                                    return t._view || (t._view = o.clone(t._model)), t._start = {}, t
                                },
                                transition: function(t) {
                                    var e = this,
                                        i = e._model,
                                        o = e._start,
                                        a = e._view;
                                    return i && 1 !== t ? (a || (a = e._view = {}), o || (o = e._start = {}), function(t, e, i, o) {
                                        var a, r, s, l, c, u, d, h, p, f = Object.keys(i);
                                        for (a = 0, r = f.length; a < r; ++a)
                                            if (u = i[s = f[a]], e.hasOwnProperty(s) || (e[s] = u), (l = e[s]) !== u && "_" !== s[0]) {
                                                if (t.hasOwnProperty(s) || (t[s] = l), (d = typeof u) == typeof(c = t[s]))
                                                    if ("string" === d) {
                                                        if ((h = n(c)).valid && (p = n(u)).valid) {
                                                            e[s] = p.mix(h, o).rgbString();
                                                            continue
                                                        }
                                                    } else if ("number" === d && isFinite(c) && isFinite(u)) {
                                                    e[s] = c + (u - c) * o;
                                                    continue
                                                }
                                                e[s] = u
                                            }
                                    }(o, a, i, t), e) : (e._view = i, e._start = null, e)
                                },
                                tooltipPosition: function() {
                                    return {
                                        x: this._model.x,
                                        y: this._model.y
                                    }
                                },
                                hasValue: function() {
                                    return o.isNumber(this._model.x) && o.isNumber(this._model.y)
                                }
                            }), a.extend = o.inherits, e.exports = a
                        }, {
                            3: 3,
                            46: 46
                        }],
                        28: [function(t, e, i) {
                                    "use strict";
                                    var n = t(3),
                                        o = t(26),
                                        a = t(46),
                                        r = t(34);
                                    e.exports = function() {
                                            function t(t, e, i) {
                                                var n;
                                                return "string" == typeof t ? (n = parseInt(t, 10), -1 !== t.indexOf("%") && (n = n / 100 * e.parentNode[i])) : n = t, n
                                            }

                                            function e(t) {
                                                return void 0 !== t && null !== t && "none" !== t
                                            }

                                            function i(i, n, o) {
                                                var r = document.defaultView,
                                                    s = a._getParentNode(i),
                                                    l = r.getComputedStyle(i)[n],
                                                    c = r.getComputedStyle(s)[n],
                                                    u = e(l),
                                                    d = e(c),
                                                    h = Number.POSITIVE_INFINITY;
                                                return u || d ? Math.min(u ? t(l, i, o) : h, d ? t(c, s, o) : h) : "none"
                                            }
                                            a.configMerge = function() {
                                                    return a.merge(a.clone(arguments[0]), [].slice.call(arguments, 1), {
                                                        merger: function(t, e, i, n) {
                                                            var o = e[t] || {},
                                                                s = i[t];
                                                            "scales" === t ? e[t] = a.scaleMerge(o, s) : "scale" === t ? e[t] = a.merge(o, [r.getScaleDefaults(s.type), s]) : a._merger(t, e, i, n)
                                                        }
                                                    })
                                                }, a.scaleMerge = function() {
                                                    return a.merge(a.clone(arguments[0]), [].slice.call(arguments, 1), {
                                                        merger: function(t, e, i, n) {
                                                            if ("xAxes" === t || "yAxes" === t) {
                                                                var o, s, l, c = i[t].length;
                                                                for (e[t] || (e[t] = []), o = 0; o < c; ++o) l = i[t][o], s = a.valueOrDefault(l.type, "xAxes" === t ? "category" : "linear"), o >= e[t].length && e[t].push({}), !e[t][o].type || l.type && l.type !== e[t][o].type ? a.merge(e[t][o], [r.getScaleDefaults(s), l]) : a.merge(e[t][o], l)
                                                            } else a._merger(t, e, i, n)
                                                        }
                                                    })
                                                }, a.where = function(t, e) {
                                                    if (a.isArray(t) && Array.prototype.filter) return t.filter(e);
                                                    var i = [];
                                                    return a.each(t, function(t) {
                                                        e(t) && i.push(t)
                                                    }), i
                                                }, a.findIndex = Array.prototype.findIndex ? function(t, e, i) {
                                                    return t.findIndex(e, i)
                                                } : function(t, e, i) {
                                                    i = void 0 === i ? t : i;
                                                    for (var n = 0, o = t.length; n < o; ++n)
                                                        if (e.call(i, t[n], n, t)) return n;
                                                    return -1
                                                }, a.findNextWhere = function(t, e, i) {
                                                    a.isNullOrUndef(i) && (i = -1);
                                                    for (var n = i + 1; n < t.length; n++) {
                                                        var o = t[n];
                                                        if (e(o)) return o
                                                    }
                                                }, a.findPreviousWhere = function(t, e, i) {
                                                    a.isNullOrUndef(i) && (i = t.length);
                                                    for (var n = i - 1; n >= 0; n--) {
                                                        var o = t[n];
                                                        if (e(o)) return o
                                                    }
                                                }, a.isNumber = function(t) {
                                                    return !isNaN(parseFloat(t)) && isFinite(t)
                                                }, a.almostEquals = function(t, e, i) {
                                                    return Math.abs(t - e) < i
                                                }, a.almostWhole = function(t, e) {
                                                    var i = Math.round(t);
                                                    return i - e < t && i + e > t
                                                }, a.max = function(t) {
                                                    return t.reduce(function(t, e) {
                                                        return isNaN(e) ? t : Math.max(t, e)
                                                    }, Number.NEGATIVE_INFINITY)
                                                }, a.min = function(t) {
                                                    return t.reduce(function(t, e) {
                                                        return isNaN(e) ? t : Math.min(t, e)
                                                    }, Number.POSITIVE_INFINITY)
                                                }, a.sign = Math.sign ? function(t) {
                                                    return Math.sign(t)
                                                } : function(t) {
                                                    return 0 === (t = +t) || isNaN(t) ? t : t > 0 ? 1 : -1
                                                }, a.log10 = Math.log10 ? function(t) {
                                                    return Math.log10(t)
                                                } : function(t) {
                                                    var e = Math.log(t) * Math.LOG10E,
                                                        i = Math.round(e);
                                                    return t === Math.pow(10, i) ? i : e
                                                }, a.toRadians = function(t) {
                                                    return t * (Math.PI / 180)
                                                }, a.toDegrees = function(t) {
                                                    return t * (180 / Math.PI)
                                                }, a.getAngleFromPoint = function(t, e) {
                                                    var i = e.x - t.x,
                                                        n = e.y - t.y,
                                                        o = Math.sqrt(i * i + n * n),
                                                        a = Math.atan2(n, i);
                                                    return a < -.5 * Math.PI && (a += 2 * Math.PI), {
                                                        angle: a,
                                                        distance: o
                                                    }
                                                }, a.distanceBetweenPoints = function(t, e) {
                                                    return Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2))
                                                }, a.aliasPixel = function(t) {
                                                    return t % 2 == 0 ? 0 : .5
                                                }, a.splineCurve = function(t, e, i, n) {
                                                    var o = t.skip ? e : t,
                                                        a = e,
                                                        r = i.skip ? e : i,
                                                        s = Math.sqrt(Math.pow(a.x - o.x, 2) + Math.pow(a.y - o.y, 2)),
                                                        l = Math.sqrt(Math.pow(r.x - a.x, 2) + Math.pow(r.y - a.y, 2)),
                                                        c = s / (s + l),
                                                        u = l / (s + l),
                                                        d = n * (c = isNaN(c) ? 0 : c),
                                                        h = n * (u = isNaN(u) ? 0 : u);
                                                    return {
                                                        previous: {
                                                            x: a.x - d * (r.x - o.x),
                                                            y: a.y - d * (r.y - o.y)
                                                        },
                                                        next: {
                                                            x: a.x + h * (r.x - o.x),
                                                            y: a.y + h * (r.y - o.y)
                                                        }
                                                    }
                                                }}},]})})